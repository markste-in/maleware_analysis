{
    "filename": "8091275dbbf1b45716ae08187d2664630cfc39d8",
    "md5": "20d989a6ec6d31bf2d0c56ac489e7ec5",
    "sha1": "349e5d61ecd34d303a7a6be0f397850e0972cd02",
    "filetype": "./../samples/benign/benignware/8091275dbbf1b45716ae08187d2664630cfc39d8: PE32 executable (DLL) (native) Intel 80386, for MS Windows",
    "pe_info": {
        "Parsing Warnings": [
            "AddressOfEntryPoint lies outside the sections' boundaries. AddressOfEntryPoint: 0xcc00ffee"
        ],
        "DOS_HEADER": {
            "Structure": "IMAGE_DOS_HEADER",
            "e_magic": {
                "FileOffset": 0,
                "Offset": 0,
                "Value": 23117
            },
            "e_cblp": {
                "FileOffset": 2,
                "Offset": 2,
                "Value": 144
            },
            "e_cp": {
                "FileOffset": 4,
                "Offset": 4,
                "Value": 3
            },
            "e_crlc": {
                "FileOffset": 6,
                "Offset": 6,
                "Value": 0
            },
            "e_cparhdr": {
                "FileOffset": 8,
                "Offset": 8,
                "Value": 4
            },
            "e_minalloc": {
                "FileOffset": 10,
                "Offset": 10,
                "Value": 0
            },
            "e_maxalloc": {
                "FileOffset": 12,
                "Offset": 12,
                "Value": 65535
            },
            "e_ss": {
                "FileOffset": 14,
                "Offset": 14,
                "Value": 0
            },
            "e_sp": {
                "FileOffset": 16,
                "Offset": 16,
                "Value": 184
            },
            "e_csum": {
                "FileOffset": 18,
                "Offset": 18,
                "Value": 0
            },
            "e_ip": {
                "FileOffset": 20,
                "Offset": 20,
                "Value": 0
            },
            "e_cs": {
                "FileOffset": 22,
                "Offset": 22,
                "Value": 0
            },
            "e_lfarlc": {
                "FileOffset": 24,
                "Offset": 24,
                "Value": 64
            },
            "e_ovno": {
                "FileOffset": 26,
                "Offset": 26,
                "Value": 0
            },
            "e_res": {
                "FileOffset": 28,
                "Offset": 28,
                "Value": "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"
            },
            "e_oemid": {
                "FileOffset": 36,
                "Offset": 36,
                "Value": 0
            },
            "e_oeminfo": {
                "FileOffset": 38,
                "Offset": 38,
                "Value": 0
            },
            "e_res2": {
                "FileOffset": 40,
                "Offset": 40,
                "Value": "\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00"
            },
            "e_lfanew": {
                "FileOffset": 60,
                "Offset": 60,
                "Value": 128
            }
        },
        "NT_HEADERS": {
            "Structure": "IMAGE_NT_HEADERS",
            "Signature": {
                "FileOffset": 128,
                "Offset": 0,
                "Value": 17744
            }
        },
        "FILE_HEADER": {
            "Structure": "IMAGE_FILE_HEADER",
            "Machine": {
                "FileOffset": 132,
                "Offset": 0,
                "Value": 332
            },
            "NumberOfSections": {
                "FileOffset": 134,
                "Offset": 2,
                "Value": 3
            },
            "TimeDateStamp": {
                "FileOffset": 136,
                "Offset": 4,
                "Value": "0x53C5553E [Tue Jul 15 16:22:22 2014 UTC]"
            },
            "PointerToSymbolTable": {
                "FileOffset": 140,
                "Offset": 8,
                "Value": 0
            },
            "NumberOfSymbols": {
                "FileOffset": 144,
                "Offset": 12,
                "Value": 0
            },
            "SizeOfOptionalHeader": {
                "FileOffset": 148,
                "Offset": 16,
                "Value": 224
            },
            "Characteristics": {
                "FileOffset": 150,
                "Offset": 18,
                "Value": 8451
            }
        },
        "Flags": [
            "IMAGE_FILE_RELOCS_STRIPPED",
            "IMAGE_FILE_EXECUTABLE_IMAGE",
            "IMAGE_FILE_32BIT_MACHINE",
            "IMAGE_FILE_DLL"
        ],
        "OPTIONAL_HEADER": {
            "Structure": "IMAGE_OPTIONAL_HEADER",
            "Magic": {
                "FileOffset": 152,
                "Offset": 0,
                "Value": 267
            },
            "MajorLinkerVersion": {
                "FileOffset": 154,
                "Offset": 2,
                "Value": 2
            },
            "MinorLinkerVersion": {
                "FileOffset": 155,
                "Offset": 3,
                "Value": 23
            },
            "SizeOfCode": {
                "FileOffset": 156,
                "Offset": 4,
                "Value": 307200
            },
            "SizeOfInitializedData": {
                "FileOffset": 160,
                "Offset": 8,
                "Value": 311296
            },
            "SizeOfUninitializedData": {
                "FileOffset": 164,
                "Offset": 12,
                "Value": 45056
            },
            "AddressOfEntryPoint": {
                "FileOffset": 168,
                "Offset": 16,
                "Value": 3422617582
            },
            "BaseOfCode": {
                "FileOffset": 172,
                "Offset": 20,
                "Value": 4096
            },
            "BaseOfData": {
                "FileOffset": 176,
                "Offset": 24,
                "Value": 0
            },
            "ImageBase": {
                "FileOffset": 180,
                "Offset": 28,
                "Value": 65536
            },
            "SectionAlignment": {
                "FileOffset": 184,
                "Offset": 32,
                "Value": 4096
            },
            "FileAlignment": {
                "FileOffset": 188,
                "Offset": 36,
                "Value": 4096
            },
            "MajorOperatingSystemVersion": {
                "FileOffset": 192,
                "Offset": 40,
                "Value": 4
            },
            "MinorOperatingSystemVersion": {
                "FileOffset": 194,
                "Offset": 42,
                "Value": 0
            },
            "MajorImageVersion": {
                "FileOffset": 196,
                "Offset": 44,
                "Value": 1
            },
            "MinorImageVersion": {
                "FileOffset": 198,
                "Offset": 46,
                "Value": 0
            },
            "MajorSubsystemVersion": {
                "FileOffset": 200,
                "Offset": 48,
                "Value": 4
            },
            "MinorSubsystemVersion": {
                "FileOffset": 202,
                "Offset": 50,
                "Value": 0
            },
            "Reserved1": {
                "FileOffset": 204,
                "Offset": 52,
                "Value": 0
            },
            "SizeOfImage": {
                "FileOffset": 208,
                "Offset": 56,
                "Value": 356352
            },
            "SizeOfHeaders": {
                "FileOffset": 212,
                "Offset": 60,
                "Value": 4096
            },
            "CheckSum": {
                "FileOffset": 216,
                "Offset": 64,
                "Value": 318182
            },
            "Subsystem": {
                "FileOffset": 220,
                "Offset": 68,
                "Value": 1
            },
            "DllCharacteristics": {
                "FileOffset": 222,
                "Offset": 70,
                "Value": 0
            },
            "SizeOfStackReserve": {
                "FileOffset": 224,
                "Offset": 72,
                "Value": 2097152
            },
            "SizeOfStackCommit": {
                "FileOffset": 228,
                "Offset": 76,
                "Value": 4096
            },
            "SizeOfHeapReserve": {
                "FileOffset": 232,
                "Offset": 80,
                "Value": 1048576
            },
            "SizeOfHeapCommit": {
                "FileOffset": 236,
                "Offset": 84,
                "Value": 4096
            },
            "LoaderFlags": {
                "FileOffset": 240,
                "Offset": 88,
                "Value": 0
            },
            "NumberOfRvaAndSizes": {
                "FileOffset": 244,
                "Offset": 92,
                "Value": 16
            }
        },
        "DllCharacteristics": [],
        "PE Sections": [
            {
                "Structure": "IMAGE_SECTION_HEADER",
                "Name": {
                    "FileOffset": 376,
                    "Offset": 0,
                    "Value": ".text\\x00\\x00\\x00"
                },
                "Misc": {
                    "FileOffset": 384,
                    "Offset": 8,
                    "Value": 306496
                },
                "Misc_PhysicalAddress": {
                    "FileOffset": 384,
                    "Offset": 8,
                    "Value": 306496
                },
                "Misc_VirtualSize": {
                    "FileOffset": 384,
                    "Offset": 8,
                    "Value": 306496
                },
                "VirtualAddress": {
                    "FileOffset": 388,
                    "Offset": 12,
                    "Value": 4096
                },
                "SizeOfRawData": {
                    "FileOffset": 392,
                    "Offset": 16,
                    "Value": 307200
                },
                "PointerToRawData": {
                    "FileOffset": 396,
                    "Offset": 20,
                    "Value": 4096
                },
                "PointerToRelocations": {
                    "FileOffset": 400,
                    "Offset": 24,
                    "Value": 0
                },
                "PointerToLinenumbers": {
                    "FileOffset": 404,
                    "Offset": 28,
                    "Value": 0
                },
                "NumberOfRelocations": {
                    "FileOffset": 408,
                    "Offset": 32,
                    "Value": 0
                },
                "NumberOfLinenumbers": {
                    "FileOffset": 410,
                    "Offset": 34,
                    "Value": 0
                },
                "Characteristics": {
                    "FileOffset": 412,
                    "Offset": 36,
                    "Value": 1616904288
                },
                "Flags": [
                    "IMAGE_SCN_CNT_CODE",
                    "IMAGE_SCN_CNT_INITIALIZED_DATA",
                    "IMAGE_SCN_ALIGN_2BYTES",
                    "IMAGE_SCN_ALIGN_4BYTES",
                    "IMAGE_SCN_ALIGN_8BYTES",
                    "IMAGE_SCN_ALIGN_16BYTES",
                    "IMAGE_SCN_ALIGN_32BYTES",
                    "IMAGE_SCN_ALIGN_64BYTES",
                    "IMAGE_SCN_ALIGN_512BYTES",
                    "IMAGE_SCN_ALIGN_1024BYTES",
                    "IMAGE_SCN_ALIGN_2048BYTES",
                    "IMAGE_SCN_ALIGN_4096BYTES",
                    "IMAGE_SCN_ALIGN_8192BYTES",
                    "IMAGE_SCN_ALIGN_MASK",
                    "IMAGE_SCN_MEM_EXECUTE",
                    "IMAGE_SCN_MEM_READ"
                ],
                "Entropy": 6.342422083471897,
                "MD5": "c22984f6c8f85f66454d7a120543bff6",
                "SHA1": "4673f99b9dc7ed5192eac0528ad7a6d6109d5142",
                "SHA256": "e6022258094a0f4b9b2e8bf43bcf06d05c051153533a78802be8c2ac91698c13",
                "SHA512": "82465b5f97e67120a2d245461e7a36923bc7435786331cbbb75a45085e59a72d1cad2d8cd4132b00c2202d6a21ea893d33ac3c71231de7fa76b8f0900ac5d33c"
            },
            {
                "Structure": "IMAGE_SECTION_HEADER",
                "Name": {
                    "FileOffset": 416,
                    "Offset": 0,
                    "Value": ".edata\\x00\\x00"
                },
                "Misc": {
                    "FileOffset": 424,
                    "Offset": 8,
                    "Value": 1656
                },
                "Misc_PhysicalAddress": {
                    "FileOffset": 424,
                    "Offset": 8,
                    "Value": 1656
                },
                "Misc_VirtualSize": {
                    "FileOffset": 424,
                    "Offset": 8,
                    "Value": 1656
                },
                "VirtualAddress": {
                    "FileOffset": 428,
                    "Offset": 12,
                    "Value": 311296
                },
                "SizeOfRawData": {
                    "FileOffset": 432,
                    "Offset": 16,
                    "Value": 4096
                },
                "PointerToRawData": {
                    "FileOffset": 436,
                    "Offset": 20,
                    "Value": 311296
                },
                "PointerToRelocations": {
                    "FileOffset": 440,
                    "Offset": 24,
                    "Value": 0
                },
                "PointerToLinenumbers": {
                    "FileOffset": 444,
                    "Offset": 28,
                    "Value": 0
                },
                "NumberOfRelocations": {
                    "FileOffset": 448,
                    "Offset": 32,
                    "Value": 0
                },
                "NumberOfLinenumbers": {
                    "FileOffset": 450,
                    "Offset": 34,
                    "Value": 0
                },
                "Characteristics": {
                    "FileOffset": 452,
                    "Offset": 36,
                    "Value": 1076887616
                },
                "Flags": [
                    "IMAGE_SCN_CNT_INITIALIZED_DATA",
                    "IMAGE_SCN_ALIGN_1BYTES",
                    "IMAGE_SCN_ALIGN_2BYTES",
                    "IMAGE_SCN_ALIGN_4BYTES",
                    "IMAGE_SCN_ALIGN_16BYTES",
                    "IMAGE_SCN_ALIGN_32BYTES",
                    "IMAGE_SCN_ALIGN_64BYTES",
                    "IMAGE_SCN_ALIGN_256BYTES",
                    "IMAGE_SCN_ALIGN_512BYTES",
                    "IMAGE_SCN_ALIGN_1024BYTES",
                    "IMAGE_SCN_ALIGN_4096BYTES",
                    "IMAGE_SCN_ALIGN_8192BYTES",
                    "IMAGE_SCN_ALIGN_MASK",
                    "IMAGE_SCN_MEM_READ"
                ],
                "Entropy": 2.849473544883211,
                "MD5": "e103916cfd3cf9733d2bdd22f98858cb",
                "SHA1": "efa01c26a61f72c7137783ff4d093fbce5cc8053",
                "SHA256": "16aaadcdacde0127534b5349a4bce90eb092ebd9b02de8dea534422aaeee239c",
                "SHA512": "193ec92a47a9033a34ddbdcb05b9a7c6d53d07425e0ac1cc94ccbeac5f0b4ff8394a55c9e4fb0cb29bd0e43fcf230e581ef9361795d8a8addd04804e5d3ffa53"
            },
            {
                "Structure": "IMAGE_SECTION_HEADER",
                "Name": {
                    "FileOffset": 456,
                    "Offset": 0,
                    "Value": ".bss\\x00\\x00\\x00\\x00"
                },
                "Misc": {
                    "FileOffset": 464,
                    "Offset": 8,
                    "Value": 41201
                },
                "Misc_PhysicalAddress": {
                    "FileOffset": 464,
                    "Offset": 8,
                    "Value": 41201
                },
                "Misc_VirtualSize": {
                    "FileOffset": 464,
                    "Offset": 8,
                    "Value": 41201
                },
                "VirtualAddress": {
                    "FileOffset": 468,
                    "Offset": 12,
                    "Value": 312960
                },
                "SizeOfRawData": {
                    "FileOffset": 472,
                    "Offset": 16,
                    "Value": 0
                },
                "PointerToRawData": {
                    "FileOffset": 476,
                    "Offset": 20,
                    "Value": 0
                },
                "PointerToRelocations": {
                    "FileOffset": 480,
                    "Offset": 24,
                    "Value": 0
                },
                "PointerToLinenumbers": {
                    "FileOffset": 484,
                    "Offset": 28,
                    "Value": 0
                },
                "NumberOfRelocations": {
                    "FileOffset": 488,
                    "Offset": 32,
                    "Value": 0
                },
                "NumberOfLinenumbers": {
                    "FileOffset": 490,
                    "Offset": 34,
                    "Value": 0
                },
                "Characteristics": {
                    "FileOffset": 492,
                    "Offset": 36,
                    "Value": 3227517056
                },
                "Flags": [
                    "IMAGE_SCN_CNT_UNINITIALIZED_DATA",
                    "IMAGE_SCN_ALIGN_2BYTES",
                    "IMAGE_SCN_ALIGN_4BYTES",
                    "IMAGE_SCN_ALIGN_8BYTES",
                    "IMAGE_SCN_ALIGN_16BYTES",
                    "IMAGE_SCN_ALIGN_32BYTES",
                    "IMAGE_SCN_ALIGN_64BYTES",
                    "IMAGE_SCN_ALIGN_512BYTES",
                    "IMAGE_SCN_ALIGN_1024BYTES",
                    "IMAGE_SCN_ALIGN_2048BYTES",
                    "IMAGE_SCN_ALIGN_4096BYTES",
                    "IMAGE_SCN_ALIGN_8192BYTES",
                    "IMAGE_SCN_ALIGN_MASK",
                    "IMAGE_SCN_MEM_READ",
                    "IMAGE_SCN_MEM_WRITE"
                ],
                "Entropy": 0.0,
                "MD5": "d41d8cd98f00b204e9800998ecf8427e",
                "SHA1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
                "SHA256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                "SHA512": "cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e"
            }
        ],
        "Directories": [
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_EXPORT",
                "VirtualAddress": {
                    "FileOffset": 248,
                    "Offset": 0,
                    "Value": 311296
                },
                "Size": {
                    "FileOffset": 252,
                    "Offset": 4,
                    "Value": 1656
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_IMPORT",
                "VirtualAddress": {
                    "FileOffset": 256,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 260,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_RESOURCE",
                "VirtualAddress": {
                    "FileOffset": 264,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 268,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_EXCEPTION",
                "VirtualAddress": {
                    "FileOffset": 272,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 276,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_SECURITY",
                "VirtualAddress": {
                    "FileOffset": 280,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 284,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_BASERELOC",
                "VirtualAddress": {
                    "FileOffset": 288,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 292,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_DEBUG",
                "VirtualAddress": {
                    "FileOffset": 296,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 300,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_COPYRIGHT",
                "VirtualAddress": {
                    "FileOffset": 304,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 308,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_GLOBALPTR",
                "VirtualAddress": {
                    "FileOffset": 312,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 316,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_TLS",
                "VirtualAddress": {
                    "FileOffset": 320,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 324,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG",
                "VirtualAddress": {
                    "FileOffset": 328,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 332,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT",
                "VirtualAddress": {
                    "FileOffset": 336,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 340,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_IAT",
                "VirtualAddress": {
                    "FileOffset": 344,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 348,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT",
                "VirtualAddress": {
                    "FileOffset": 352,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 356,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR",
                "VirtualAddress": {
                    "FileOffset": 360,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 364,
                    "Offset": 4,
                    "Value": 0
                }
            },
            {
                "Structure": "IMAGE_DIRECTORY_ENTRY_RESERVED",
                "VirtualAddress": {
                    "FileOffset": 368,
                    "Offset": 0,
                    "Value": 0
                },
                "Size": {
                    "FileOffset": 372,
                    "Offset": 4,
                    "Value": 0
                }
            }
        ],
        "Exported symbols": [
            {
                "Structure": "IMAGE_EXPORT_DIRECTORY",
                "Characteristics": {
                    "FileOffset": 311296,
                    "Offset": 0,
                    "Value": 0
                },
                "TimeDateStamp": {
                    "FileOffset": 311300,
                    "Offset": 4,
                    "Value": "0x53C5553E [Tue Jul 15 16:22:22 2014 UTC]"
                },
                "MajorVersion": {
                    "FileOffset": 311304,
                    "Offset": 8,
                    "Value": 0
                },
                "MinorVersion": {
                    "FileOffset": 311306,
                    "Offset": 10,
                    "Value": 0
                },
                "Name": {
                    "FileOffset": 311308,
                    "Offset": 12,
                    "Value": 311786
                },
                "Base": {
                    "FileOffset": 311312,
                    "Offset": 16,
                    "Value": 1
                },
                "NumberOfFunctions": {
                    "FileOffset": 311316,
                    "Offset": 20,
                    "Value": 45
                },
                "NumberOfNames": {
                    "FileOffset": 311320,
                    "Offset": 24,
                    "Value": 45
                },
                "AddressOfFunctions": {
                    "FileOffset": 311324,
                    "Offset": 28,
                    "Value": 311336
                },
                "AddressOfNames": {
                    "FileOffset": 311328,
                    "Offset": 32,
                    "Value": 311516
                },
                "AddressOfNameOrdinals": {
                    "FileOffset": 311332,
                    "Offset": 36,
                    "Value": 311696
                }
            },
            {
                "Ordinal": 1,
                "RVA": 178061,
                "Name": "ScsiDebugPrint"
            },
            {
                "Ordinal": 2,
                "RVA": 178177,
                "Name": "ScsiPortCompleteRequest"
            },
            {
                "Ordinal": 3,
                "RVA": 178223,
                "Name": "ScsiPortConvertPhysicalAddressToUlong"
            },
            {
                "Ordinal": 4,
                "RVA": 178233,
                "Name": "ScsiPortConvertUlongToPhysicalAddress"
            },
            {
                "Ordinal": 5,
                "RVA": 178248,
                "Name": "ScsiPortFlushDma"
            },
            {
                "Ordinal": 6,
                "RVA": 178294,
                "Name": "ScsiPortFreeDeviceBase"
            },
            {
                "Ordinal": 7,
                "RVA": 178301,
                "Name": "ScsiPortGetBusData"
            },
            {
                "Ordinal": 8,
                "RVA": 178361,
                "Name": "ScsiPortGetDeviceBase"
            },
            {
                "Ordinal": 9,
                "RVA": 178491,
                "Name": "ScsiPortGetLogicalUnit"
            },
            {
                "Ordinal": 10,
                "RVA": 178542,
                "Name": "ScsiPortGetPhysicalAddress"
            },
            {
                "Ordinal": 11,
                "RVA": 178688,
                "Name": "ScsiPortGetSrb"
            },
            {
                "Ordinal": 12,
                "RVA": 178938,
                "Name": "ScsiPortGetUncachedExtension"
            },
            {
                "Ordinal": 13,
                "RVA": 179237,
                "Name": "ScsiPortGetVirtualAddress"
            },
            {
                "Ordinal": 14,
                "RVA": 181359,
                "Name": "ScsiPortInitialize"
            },
            {
                "Ordinal": 15,
                "RVA": 182334,
                "Name": "ScsiPortIoMapTransfer"
            },
            {
                "Ordinal": 16,
                "RVA": 182380,
                "Name": "ScsiPortLogError"
            },
            {
                "Ordinal": 17,
                "RVA": 182426,
                "Name": "ScsiPortMoveMemory"
            },
            {
                "Ordinal": 18,
                "RVA": 182461,
                "Name": "ScsiPortNotification"
            },
            {
                "Ordinal": 19,
                "RVA": 182540,
                "Name": "ScsiPortReadPortBufferUchar"
            },
            {
                "Ordinal": 20,
                "RVA": 182561,
                "Name": "ScsiPortReadPortBufferUlong"
            },
            {
                "Ordinal": 21,
                "RVA": 182582,
                "Name": "ScsiPortReadPortBufferUshort"
            },
            {
                "Ordinal": 22,
                "RVA": 182604,
                "Name": "ScsiPortReadPortUchar"
            },
            {
                "Ordinal": 23,
                "RVA": 182673,
                "Name": "ScsiPortReadPortUlong"
            },
            {
                "Ordinal": 24,
                "RVA": 182685,
                "Name": "ScsiPortReadPortUshort"
            },
            {
                "Ordinal": 25,
                "RVA": 182698,
                "Name": "ScsiPortReadRegisterBufferUchar"
            },
            {
                "Ordinal": 26,
                "RVA": 182744,
                "Name": "ScsiPortReadRegisterBufferUlong"
            },
            {
                "Ordinal": 27,
                "RVA": 182790,
                "Name": "ScsiPortReadRegisterBufferUshort"
            },
            {
                "Ordinal": 28,
                "RVA": 182836,
                "Name": "ScsiPortReadRegisterUchar"
            },
            {
                "Ordinal": 29,
                "RVA": 182849,
                "Name": "ScsiPortReadRegisterUlong"
            },
            {
                "Ordinal": 30,
                "RVA": 182861,
                "Name": "ScsiPortReadRegisterUshort"
            },
            {
                "Ordinal": 31,
                "RVA": 182874,
                "Name": "ScsiPortSetBusDataByOffset"
            },
            {
                "Ordinal": 32,
                "RVA": 182925,
                "Name": "ScsiPortStallExecution"
            },
            {
                "Ordinal": 33,
                "RVA": 182949,
                "Name": "ScsiPortValidateRange"
            },
            {
                "Ordinal": 34,
                "RVA": 183000,
                "Name": "ScsiPortWritePortBufferUchar"
            },
            {
                "Ordinal": 35,
                "RVA": 183021,
                "Name": "ScsiPortWritePortBufferUlong"
            },
            {
                "Ordinal": 36,
                "RVA": 183042,
                "Name": "ScsiPortWritePortBufferUshort"
            },
            {
                "Ordinal": 37,
                "RVA": 183064,
                "Name": "ScsiPortWritePortUchar"
            },
            {
                "Ordinal": 38,
                "RVA": 183080,
                "Name": "ScsiPortWritePortUlong"
            },
            {
                "Ordinal": 39,
                "RVA": 183095,
                "Name": "ScsiPortWritePortUshort"
            },
            {
                "Ordinal": 40,
                "RVA": 183112,
                "Name": "ScsiPortWriteRegisterBufferUchar"
            },
            {
                "Ordinal": 41,
                "RVA": 183158,
                "Name": "ScsiPortWriteRegisterBufferUlong"
            },
            {
                "Ordinal": 42,
                "RVA": 183204,
                "Name": "ScsiPortWriteRegisterBufferUshort"
            },
            {
                "Ordinal": 43,
                "RVA": 183250,
                "Name": "ScsiPortWriteRegisterUchar"
            },
            {
                "Ordinal": 44,
                "RVA": 183265,
                "Name": "ScsiPortWriteRegisterUlong"
            },
            {
                "Ordinal": 45,
                "RVA": 183280,
                "Name": "ScsiPortWriteRegisterUshort"
            }
        ]
    },
    "strings": [
        "!This program cannot be run in DOS mode.",
        ".text",
        "``.edata",
        "0@.bss",
        "D$\fP",
        "Boot",
        "Sectf",
        "Wind",
        "l[^_]",
        "D$\fP",
        "\f;]\fu",
        "l[^_]",
        "OSNm",
        "D$\f&",
        "[^_]",
        "[^_]",
        "J\f[]",
        "InfL",
        "InfK",
        "Inff",
        "[^_]",
        "InfS",
        "$[^_]",
        "\f[^_]",
        "\f[^_]",
        "<\\u1",
        "\f[^_]",
        "<;tg<;",
        "InfF",
        "InfF",
        "InfC",
        "InfF",
        "InfC",
        "InfF",
        "InfK",
        "Inff",
        "InfL",
        "InfS",
        "InfC",
        "[^_]",
        "\f[^_]",
        "\f[^_]",
        "\f[^_]",
        "\f[^_]",
        "BtOp",
        "syst",
        "em32f",
        "D$\f2",
        "D$\f7",
        "D$\f>",
        "D$\fC",
        "D$\fI",
        "D$\fN",
        "D$\fS",
        "[^_]",
        "[^_]",
        "[^_]",
        "D$\f8",
        "D$\f9",
        "D$\f:",
        "D$\f;",
        "D$\f<",
        "D$\f=",
        "D$\f>",
        "D$\f?",
        "[^_]",
        "HdrSu=",
        "D$\fs",
        "D$\ft",
        "D$\fu",
        "D$\fv",
        "D$\fw",
        "D$\fx",
        "D$\fy",
        "D$\fz",
        "D$\f{",
        "D$\f|",
        "D$\f}",
        "D$\f~",
        "Load",
        "ing ",
        "Linu",
        "x...",
        "[^_]",
        "[^_]",
        " /SA",
        "FEBO",
        "OT:M",
        "@\fINIM",
        "AL /",
        " /SA",
        "FEBO",
        "OT:N",
        "@\fETWO",
        "RK /",
        " /SA",
        "FEBO",
        "OT:M",
        "@\fINIM",
        "AL(A",
        "LTER",
        "NATE",
        "SHEL",
        "@ L) /",
        "@$SOS",
        " /SA",
        "FEBO",
        "OT:D",
        "@\fSREP",
        "AIR ",
        "/SOS",
        " /BO",
        "OTLOf",
        " /BA",
        "SEVI",
        " /DE",
        "Str ",
        "OSIt",
        "[^_]",
        "D$\f9",
        "t\"t'9X",
        "9V\ft`",
        "CacD",
        "CacB",
        "D$\f_",
        "CacB",
        "CacD",
        "CacB",
        "CacD",
        "CacB",
        "$[^_]",
        ";^\ft",
        "D$\f ",
        "D$\f&",
        "D$\f+",
        "D$\f?",
        "D$\f@",
        "D$\fA",
        "CacD",
        "CacB",
        "D$\fg",
        "D$\fh",
        "D$\fi",
        "D$\fj",
        "([^]",
        "L[^_]",
        "D$\f,",
        "D$\f.",
        "fdisf",
        " 9E\f",
        "rdisf",
        "part",
        "itiof",
        "cdrof",
        "$[^_]",
        "[^_]",
        "D$\fA",
        "D$\fF",
        "([^]",
        "D$\fk",
        "D$\fk",
        "[^_]",
        "t[^_]",
        "[^_]",
        "ExtF",
        "D$\fJ",
        "9E\fr#",
        "9E\fs",
        "D$\f[",
        "D$\fc",
        "D$\fd",
        "D$\fe",
        "D$\ff",
        "D$\fg",
        "D$\fh",
        "D$\fk",
        "D$\fm",
        ",[^_]",
        "D$\fF",
        "ExtS",
        "ExtS",
        "D$\fh",
        "D$\fi",
        "D$\fj",
        "D$\fk",
        "D$\fl",
        "D$\fm",
        "D$\fn",
        "D$\fo",
        "D$\fp",
        "D$\fq",
        "D$\fr",
        "D$\fs",
        "D$\ft",
        "D$\fu",
        "D$\fv",
        "D$\fw",
        "D$\fx",
        "D$\fy",
        "D$\fz",
        "D$\f{",
        "D$\f|",
        "D$\f}",
        "D$\f~",
        "D$\fJ",
        "D$\fW",
        "p[^]",
        "ExtG",
        "ExtG",
        "$[^_]",
        "D$\fT",
        "D$\fi",
        "ExtB",
        "ExtB",
        "D[^_]",
        "[^_]",
        "D$\fO",
        "ExtB",
        "ExtB",
        "$[^_]",
        "D$\fo",
        "ExtB",
        "E\f;0",
        "ExtB",
        "ExtB",
        "E\f;0v",
        "ExtB",
        "$[^_]",
        "ExtB",
        "E\f;0",
        "ExtB",
        "ExtB",
        "E\f;0v",
        "ExtB",
        "$[^_]",
        "ExtL",
        "ExtL",
        "ExtL",
        "ExtL",
        ",[^_]",
        "ExtB",
        "ExtL",
        "ExtB",
        "ExtL",
        "ExtL",
        "ExtB",
        "ExtB",
        "[^_]",
        "ExtL",
        "</t\"<\\u",
        "ExtL",
        "ExtF",
        "ExtL",
        "TatC",
        "FatF",
        "[^_]",
        "[^_]",
        "[^_]",
        "D$\ff",
        "D$\fp",
        "([^]",
        "FatB",
        "FatB",
        "FatB",
        "FatB",
        "$[^_]",
        "[^_]",
        "D$\f!",
        "TatC",
        "TatC",
        "$[^_]",
        "[^_]",
        "D$\fZ",
        "$[^_]",
        ":)}\f",
        ")}\ftZ",
        "tP9s",
        "uA9{\fu<",
        "FatB",
        "FatB",
        "FatB",
        "FatB",
        "4[^_]",
        "TatC",
        "TatC",
        "[^_]",
        "FatF",
        "FatV",
        "FatV",
        "FatV",
        "FatV",
        "FatV",
        "FatV",
        "[^_]",
        "D$\f%",
        "$[^_]",
        "$[^_]",
        "8(u\f",
        "FsDN",
        "4[^_]",
        "D$\f3",
        "FsDv",
        "D$\f5",
        "[^_]",
        "IsoF",
        "</t0<\\t,",
        "D$\fl",
        "D$\fo",
        "D$\ft",
        "IsoB",
        "IsoB",
        "IsoB",
        "D$\f<",
        "D$\f@",
        "D$\fG",
        "IsoB",
        "D$\f&",
        "IsoB",
        "[^_]",
        "IsoF",
        "[^_]",
        "D$\fb",
        "D$\fc",
        "D$\fd",
        "D$\fe",
        "<[^_]",
        "T[^_]",
        "[^_]",
        "NtfC",
        "NtfC",
        "NtfL",
        "NtfL",
        "4[^_]",
        "[^_]",
        "D$\fW",
        "[^_]",
        "NtfF",
        "[^_]",
        "NtfM",
        "NtfM",
        "NtfI",
        "NtfM",
        "D$\fS",
        "NtfI",
        "NtfM",
        "D$\fd",
        "D$\fk",
        "NtfM",
        "D$\fp",
        "NtfB",
        "NtfI",
        "NtfM",
        "NtfB",
        "NtfI",
        "NtfM",
        "NtfB",
        "NtfI",
        "NtfM",
        "NtfB",
        "NtfI",
        "NtfM",
        "[^_]",
        "D$\f#",
        "NtfF",
        "NtfF",
        "NtfV",
        "NtfV",
        "NtfV",
        "NtfV",
        "NtfM",
        "NtfV",
        "NtfM",
        "NtfV",
        "NtfM",
        "NtfV",
        "NtfD",
        "NtfM",
        "NtfV",
        "NtfM",
        "NtfV",
        ",[^_]",
        "D$\fC",
        "D$\fd",
        "D$\fk",
        "D$\fq",
        "PxeF",
        "PxeF",
        "PxeF",
        "D$\f1",
        "\\fre",
        "eldr",
        ".ini",
        "IniF",
        "IniF",
        "IniF",
        "D$\f)",
        "D$\f1",
        "[^_]",
        "D$\f:",
        "D$\f;",
        "D$\fu",
        "D$\fw",
        "D$\f}",
        "$[^_]",
        "[^_]",
        "IniS",
        "IniN",
        "IniS",
        "IniN",
        "IniV",
        "IniI",
        "IniN",
        "IniS",
        "[^_]",
        "IniI",
        "IniN",
        "IniI",
        "IniV",
        "IniN",
        "IniI",
        "[^_]",
        "[^_]",
        "t9<]t5",
        "[^_]",
        ":=t\"",
        "t < ",
        "t><=t:",
        "<=t!",
        "[^_]",
        "t(< t$",
        "[^_]",
        "D$\f)",
        "IniF",
        "IniF",
        "IniF",
        "IniS",
        "IniF",
        "IniN",
        "IniF",
        "IniF",
        "IniI",
        "IniF",
        "IniN",
        "IniI",
        "IniF",
        "IniV",
        "IniN",
        "IniI",
        "IniF",
        "IniF",
        "<[^_]",
        "D$\fL",
        "D$\fx",
        "[^_]",
        "@<9C8tj",
        "D$\fI",
        "D$\fK",
        "D$\fq",
        "$[^_]",
        ",[^_]",
        "D$\f|",
        "9}\frc",
        "$[^_]",
        "[^_]",
        " [^]",
        ";E\fv",
        ";U\fw39",
        "D$\f(",
        "D$\f7",
        "D$\f@",
        "D$\fK",
        "D$\fL",
        "<[^_]",
        "D$\f^",
        "D$\fp",
        "D$\fy",
        "\f;=`",
        ",[^_]",
        "\f;=`",
        ",[^_]",
        "=#Endt+",
        "9~\ft'",
        "=#Endt+",
        "D$\fJ",
        "D$\fR",
        "D$\f`",
        "D$\fy",
        "#End",
        "4[^_]",
        "[^_]",
        "4[^_]",
        "D$\fR",
        "None",
        "[^_]",
        "#Endu'",
        "[^_]",
        "Rtl ",
        "Rtl ",
        "8\\t'",
        "f=lit",
        "f=rius",
        "f=lht",
        "f=lf",
        "8nkt'",
        "[^_]",
        "D$\f%",
        "Hive",
        "Hive",
        "D$\f9",
        "D$\f@",
        ";nkt'",
        "9E\fr6",
        "D$\f#",
        "f=lht",
        "f=lfu",
        "D$\f4",
        "[^_]",
        "D$\fC",
        "D$\fR",
        ":\\t?",
        "D$\fX",
        "D$\fd",
        "D$\fl",
        ";nkt'",
        "[^_]",
        ":nkt'",
        "D$\f\f",
        "[^_]",
        "D$\fW",
        "D$\f^",
        "D$\fj",
        "D$\fv",
        "D$\f ",
        ";nkt'",
        "9E\fr6",
        "D$\f*",
        "D$\f/",
        "D$\fH",
        "[^_]",
        "mult",
        "i(0)",
        "disk",
        "C\f(0)",
        "HwHp",
        "HwNm",
        "HwCD",
        "HwCD",
        "[^_]",
        ";U\fvb9",
        "U\f9U",
        "\f[^_]",
        "[^_]",
        "0[^_]",
        "[^_]",
        "[^_]",
        "([^_]",
        "TuiP",
        "TuiP",
        "    ",
        "D[^_]",
        "   O",
        "K   ",
        "D$\fp",
        "t%< ",
        "[^_]",
        "TuiP",
        "TuiP",
        "TuiS",
        "TuiS",
        "[^_]",
        "TuiS",
        "TuiS",
        "[^_]",
        "[^_]",
        "    ",
        "U\f9S",
        "l[^_]",
        "[^_]",
        "4[^_]",
        "\f[^_]",
        "D$\fP",
        "UiTx",
        "D$\fP",
        "UiTx",
        "[^_]",
        "D$\fg",
        "D$\fh",
        "Palc",
        "9u\fw",
        "Palc",
        "[^_]",
        "$[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "D$\fS",
        "D$\fh",
        "D$\f~",
        "([^]",
        "D[^_]",
        "D$\f>",
        "D$\fL",
        "D$\fU",
        ",[^_]",
        "WlDe",
        "WlNm",
        "WlDe",
        "WlNm",
        "WlDe",
        "[^_]",
        "D$\fY",
        "D$\f-S",
        "[^_]",
        "[^_]",
        "E\f+X",
        "D$\fw",
        "E\f;X",
        ".dll",
        "[^_]",
        "D$\fv",
        "D$\f.",
        "D$\f3",
        "D$\f?",
        "D$\fD",
        "[^_]",
        "SYST",
        "EM32f",
        "WIND",
        "OWS\\",
        "SYST",
        "EM32f",
        "[^_]",
        "D$\f-",
        ";/u!",
        "</~ <9",
        ".DLL",
        "D$\f<",
        "syst",
        "em32f",
        "[^_]",
        "D$\f\"",
        "[^_]",
        "D$\f9",
        "D$\fH",
        "$[^_]",
        "D$\fj",
        "[^_]",
        "D$\fd",
        "D$\fe",
        "D$\ff",
        "DSig",
        "AppP",
        "atch",
        "\\drv",
        "@\fmain",
        ".sdb",
        "[^_]",
        "D$\f(",
        " [^]",
        "D$\f;",
        " [^]",
        "D$\fN",
        "9^Lu",
        " [^]",
        "[^_]",
        "D$\fP",
        "[^_]",
        "D$\fG",
        "D$\f[",
        "D$\fl",
        "N\f;J\fs\f",
        ";H\fr",
        ";Q\fu",
        "4[^_]",
        "D$\fr",
        "w\f9]",
        "D$\fI",
        "D$\fW",
        "4[^_]",
        "D$\f@",
        "D$\fX",
        "D$\fh",
        "WlBd",
        "WlNm",
        "WlBd",
        "WlNm",
        "WlBd",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "WlNm",
        "[^_]",
        "WlNm",
        "D$\f\f",
        "WlNm",
        "D$\fI",
        "D$\fP",
        "D$\fS",
        "D$\f[",
        "WlNm",
        "D$\fv",
        "WlNm",
        "SYST",
        "EM32f",
        "[^_]",
        "D$\fe",
        "D$\fk",
        "D$\fo",
        "SYST",
        "EM32",
        "\\CON",
        "@\fFIG\\",
        "D$\fP",
        "D$\fe",
        "D$\fl",
        "D$\fq",
        "[^_]",
        "[^_]",
        "HwRl",
        "HwRl",
        "D$\f>",
        "D$\fB",
        "D$\fV",
        "D$\fW",
        "HwRl",
        "D$\f`",
        "HwRl",
        "D$\f~",
        "HwRl",
        "D$\f`",
        "D$\f2",
        "HwRl",
        "D$\f9",
        "D$ 8",
        "D$\f`",
        "D$\fh",
        "HwRl",
        "D$ <",
        "D$\f`",
        "D$\f6",
        "D$\fE",
        "HwRl",
        "D$\fQ",
        "D$ @",
        "D$\fx",
        "D$\f#",
        "<Mt-",
        "<Zux",
        "D$\f;",
        "D$\f?",
        "D$\fD",
        "LOGI",
        "TECH",
        " SER",
        "IAL ",
        "MOUSf",
        "MICR",
        "OSOF",
        "T SE",
        "RIAL",
        " MOU",
        "SE W",
        "ITH ",
        "WHEEf",
        "MICR",
        "OSOF",
        "T SE",
        "RIAL",
        " MOUf",
        "HwRl",
        "D$\f ",
        "D$\f!",
        "HwRl",
        "D$\f@",
        "HwRl",
        "D$\fy",
        "D$ 8",
        "D$\f(",
        "HwRl",
        "D$\fD",
        "D$  ",
        "D$\f(",
        "D$\fe",
        "D$\f)",
        "HwRl",
        "D$\f ",
        "D$\fF",
        "D$\fJ",
        "HwRl",
        "D$\f ",
        "D$\f`",
        "D$\ft",
        "D$\fx",
        "VBE ",
        "Disp",
        "VGA ",
        "Disp",
        "[^_]",
        "D$\f'",
        "D$\f/",
        "HwRl",
        "D$\fQ",
        "D$\fg",
        "[^_]",
        "D$\f*",
        "D$\f+",
        "D$\f,",
        "D$\f-",
        "D$\f.",
        "D$\f/",
        "HwRl",
        "D$\f4",
        "<[^_]",
        "HwDc",
        "HwDc",
        "D$\f\f",
        "[^_]",
        "D$\f.",
        "D$\fK",
        "D$\fT",
        "D$\fc",
        "[^_]",
        "PCI ",
        "D$\fT",
        "D$\fV",
        "D$\fW",
        "D$\fX",
        "D$\fY",
        "HwRl",
        "D$\fc",
        "$PIRt",
        ";$PIR",
        "D$\f*",
        "D$\f5",
        "D$\f9",
        "D$\fv",
        "HwRl",
        "D$\f~",
        "HwRl",
        "HwRl",
        "[^_]",
        ",[^_]",
        "D$\f$",
        "D$\f=",
        "D$\fA",
        "p[^]",
        "<[^_]",
        "SAt_",
        " not",
        " fou",
        "D$\fP",
        "D$\fP",
        "D$\fP",
        "<[^_]",
        "D$\f2",
        "D$\fK",
        "[^_]",
        "D$\f6",
        "net(f",
        "PAMS",
        "PAMS",
        "D$\f,",
        "D$\fJ",
        "D$\f]",
        "D$\f^",
        "D$\f_",
        "D$\f`",
        "D$\fa",
        "D$\fb",
        "D$\f]",
        "D$\fc",
        "D$\f]",
        "[^_]",
        "D[^_]",
        "Ptrf=",
        "5f=\"P",
        "f=\"Pw\ff=",
        "tf=+P",
        "f=<P",
        "8[^]",
        "D$\fv",
        "D$\f}",
        "D$\f ",
        "D$\f;",
        "D$\fF",
        "D$\f$",
        "D$\f%",
        "D$\f$",
        "D$\f%",
        "D$\f(",
        "[^_]",
        "4[^_]",
        "BRFRu<",
        "D$\f.",
        "D$\f/",
        "D$\f0",
        "D$\f1",
        "HwDc",
        ",[^_]",
        "HwDc",
        "HwRl",
        "D$\fm",
        "D$\fu",
        "HwRl",
        "HwRl",
        "D$\f6",
        "D$\f]",
        "D$\fT",
        "HwRl",
        "D$\fH",
        "D$\f`",
        "D$\f`",
        "D$\f`",
        "[^_]",
        "$[^_]",
        "[^_]",
        "<rt\f<g",
        "UUUU",
        "[^_]",
        "[^_]",
        "[^_]",
        "D$\f=",
        "D$\fP",
        "[^_]",
        "4[^_]",
        "D$\fU",
        "D$\fY",
        "D$\fE",
        "<[^_]",
        "[^_]",
        "D$\fL",
        "D$\fd",
        "D$\fu",
        "D$\f>",
        "[^_]",
        "D$\fE",
        "[^_]",
        ",[^_]",
        "[^_]",
        "ScsD",
        "ScsD",
        "ScsA",
        "ScsD",
        "D$\f~",
        "ScsD",
        "ScsD",
        "ScsD",
        "ScsD",
        "D$\f,",
        "fm_]",
        "D$\f-",
        "D$\f`",
        "fo^]",
        "D$\f@",
        "\\NTB",
        "OOTD",
        "D.SYf",
        "D$\fD",
        "^YX.",
        "WVQR1",
        "=$PnPt",
        "Vj!Y1",
        "ZY^_",
        "USVW",
        "D$TTP",
        "E\f#E",
        "[^_]",
        ";s8s?",
        "Hal ",
        "[^_]",
        "D$\f&",
        "Hal ",
        "[^_]",
        "Hal ",
        "9_8w",
        "[^_]",
        "HsuB",
        "D$\f`",
        "fm_]",
        "fo^]",
        "Hal ",
        "[^_]",
        "[^_]",
        "Xt)9C",
        "4[^_]",
        "D$\f)",
        "[^_]",
        "[^_]",
        "E\fu&",
        "[^_]",
        ";\\2hs",
        "[^_]",
        "U\f+B",
        "9Bhw",
        "[^_]",
        "[^_]",
        "[^_]",
        "6f92",
        "4Af94BuM",
        "[^_]",
        ";nkt'",
        ";vkt'",
        ";M\fv",
        ";M\fv",
        "9E\fr",
        "[^_]",
        ";nkt'",
        ";vkt'",
        ";regfu=",
        "regf",
        "t19E",
        "[^_]",
        "52MC",
        "regf",
        "[^_]",
        "52MC",
        "52MC",
        "hbin",
        "?hbinu",
        "52MC",
        "52MC",
        "[^_]",
        "52MC",
        "52MC",
        "[^_]",
        "52MC",
        "[^_]",
        "f=lit",
        "f=riuZf",
        "8nku",
        "f=lht",
        "f=lfu?f",
        "[^_]",
        ";nkt'",
        "[^_]",
        "52MC",
        "hbinkE",
        "52MC",
        "52MC",
        "[^_]",
        ";PtsG",
        ";PTs",
        ",[^_]",
        "[^_]",
        "D$\f%",
        "USTR",
        "USTR",
        "[^_]",
        "80uE",
        "[^_]",
        "[^_]",
        "1f92u",
        "ASTR",
        "OSTR",
        "USTR",
        "f9<Bu",
        "\f[^_]",
        "tD;E",
        "<[^_]",
        "H[^_]",
        "80u^",
        "[^_]",
        "OSTR",
        "jf;C",
        "OSTR",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "OSTR",
        "OSTR",
        "[^_]",
        "[^_]",
        "USTR",
        "[^_]",
        "OSTR",
        "OSTR",
        "[^_]",
        "OSTR",
        "OSTR",
        "[^_]",
        "USTR",
        "^f;C",
        "USTR",
        "USTR",
        "uf;C",
        "USTR",
        "[^_]",
        "USTR",
        "ASTR",
        "ASTR",
        "[^_]",
        "ASTR",
        "ASTR",
        "[^_]",
        "[^_]",
        "1f92u",
        "USTR",
        "USTR",
        "[^_]",
        "[^_]",
        "USTR",
        "\f[^_]",
        "<A.t",
        "[^_]",
        "N+t$\f",
        "L$\f1",
        "9u\fv9",
        "[^_]",
        "9u\fv9",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "[^_]",
        "@v<f",
        "[^_]",
        "D$\f2",
        "[^_]",
        "[^_]",
        "[^_]",
        "M\f;E",
        "\f[^_]",
        "u\f;U",
        "[^_]",
        "`v4f",
        "[^_]",
        "[^_]",
        "}\f;E",
        "E\f+E",
        "[^_]",
        "<`~3",
        "\f[^_]",
        "P#E\f]",
        "D$\f_^",
        "[^_]",
        "D$\f_^",
        "D$\f_^",
        "D$\f_^",
        "uW;M",
        "D[^_]",
        "~B;}",
        "u ;]",
        "$[^_]",
        "l[^_]",
        "l[^_]",
        "l[^_]",
        "D[^_]",
        "E\f9U",
        "D[^_]",
        "<[^_]",
        "\f[^_]",
        "D$\f_^",
        "I<.wG",
        "C<5w ",
        "?]u!",
        "<-uW",
        "[^_]",
        ">]u!",
        "[^_]",
        "[^_]",
        ",[^_]",
        "D$\f_^",
        "[^_]",
        "L$\f=",
        "[^_]",
        "[^_]",
        "[^_]",
        "gfff",
        "#QNAf",
        "#INF",
        "\\[^_]",
        "7<6u",
        "<it\f<ut",
        "[^_]",
        "[^_]",
        "gfff",
        "\\[^_]",
        "[^_]",
        "uNXZ",
        "u>XZ$",
        "L$\f1",
        "L$\f1",
        "d$\f9",
        "r/9D$",
        "+|$\f",
        "l$(1",
        "u:;L$",
        "ReactOSSetup",
        "BootSector",
        "Drive",
        "Partition",
        "Linux",
        "Windows",
        "WindowsNT40",
        "Windows2003",
        "multi(0)disk(0)",
        "[Time Remaining: ] ",
        "Boot Menu",
        "<fBBf<",
        "<ffff<",
        "?3?0000p",
        "ccccg",
        "fffffff",
        "88||",
        "||88",
        "fff$",
        "8ll8v",
        "000`",
        "000000",
        "\f\f\f\f\f\f",
        "0000",
        "fff|ffff",
        "lffffffl",
        "fbhxh`bf",
        "fbhxh```",
        "\f\f\f\f\f",
        "fflxxlff",
        "``````bf",
        "fff|````",
        "fff|lfff",
        "l|88|l",
        "ffff<",
        "<00000000<",
        "<\f\f\f\f\f\f\f\f<",
        "``xlffff|",
        "\f\f<l",
        "8ld`",
        "````",
        "``lvffff",
        "``flxxlf",
        "ffffff",
        "fffff|``",
        "vf```",
        "00006",
        "fffff<",
        "l888l",
        "<f``f<\f",
        "f`|``f",
        "<f```f<",
        "8ld`",
        "````",
        "ffffff",
        "<ll>",
        "8ll8",
        "6666666",
        "66666666",
        "66666666",
        "66666",
        "666666666666666666666666",
        "6666666666666",
        "6666666",
        "66666667666666666666670?",
        "?076666666666666",
        "666666666666670766666666",
        "66666",
        "66666666",
        "6666666",
        "666666666666666?",
        "?666666666666666",
        "66666666",
        "lllllll",
        "fffff|``",
        "<fff<",
        "llll",
        "\f>ffff<",
        "0``|```0",
        "8ll8",
        "\f\f\f\f\f",
        "lllll",
        "|||||||",
        "PCI ",
        "CBootType",
        "FreeLoader",
        "DefaultOS",
        "TimeOut",
        "Error when detecting hardware",
        "Unable to load additional boot device driver",
        "Error initializing .ini file",
        "Section [FreeLoader] not found in freeldr.ini.",
        "Unable to initialize UI.",
        "Unable to read operating systems section in freeldr.ini.",
        "Press ENTER to reboot.",
        "There were no operating systems listed in freeldr.ini.",
        "Press ENTER to reboot.",
        "For troubleshooting and advanced startup options for ReactOS, press F8.",
        "Please select the operating system to start:",
        "Press ENTER to reboot.",
        "Rebooting...",
        "BootMain() called.",
        "../../boot/freeldr/freeldr/freeldr.c",
        "Unable to initialize UI.",
        "Unable to initialize memory manager",
        "Strings",
        "\\I386\\",
        "\\reactos\\",
        "fdisk",
        "Failed to open txtsetup.sif",
        "../../boot/freeldr/freeldr/windows/setupldr.c",
        "%stxtsetup.sif",
        "BootPath: '%s', SystemPath: '%s'",
        "OsLoadOptions",
        "SetupData",
        "Failed to find 'SetupData/OsLoadOptions'",
        "Failed to get load options",
        "DbgOsLoadOptions",
        "BootOptions: '%s'",
        "Setup is loading...",
        "AnsiCodepage",
        "Failed to find 'NLS/AnsiCodepage'",
        "OemCodepage",
        "UnicodeCasetable",
        "NLS data loaded with status %d",
        "SourceDisksFiles",
        "Directories",
        "could not add boot driver %s, %s",
        "timeout=",
        "defaultos=",
        "rdbase=",
        "rdsize=",
        "rdoffset=",
        "(%s:%lu) ",
        "err: ",
        "fixme: ",
        "warn: ",
        "trace: ",
        "Dumping buffer at %p with length of %lu bytes:",
        "000%x:",
        "00%x:",
        "0%x:",
        "fixme",
        "warn",
        "trace",
        "memory",
        "filesystem",
        "inifile",
        "disk",
        "cache",
        "registry",
        "linux",
        "hwdetect",
        "windows",
        "peloader",
        "scsiport",
        "heap",
        "*** STOP: 0x%08lX (0x%08lX, 0x%08lX, 0x%08lX, 0x%08lX)",
        "Assertion '%s' failed at %s line %u: %s",
        "Assertion '%s' failed at %s line %u",
        "TEST_BUGCHECK",
        "MISSING_HARDWARE_REQUIREMENTS",
        "FREELDR_IMAGE_CORRUPTION",
        "Section [%s] not found in freeldr.ini.",
        "BootPath",
        "Boot path not specified for selected OS!",
        "Kernel",
        "Linux kernel filename not specified for selected OS!",
        "Initrd",
        "CommandLine",
        "Invalid boot sector magic (0xaa55)",
        "SetupSectors: %d",
        "../../boot/freeldr/freeldr/linuxboot.c",
        "RootFlags: 0x%x",
        "SystemSize: 0x%x",
        "SwapDevice: 0x%x",
        "RamSize: 0x%x",
        "VideoMode: 0x%x",
        "RootDevice: 0x%x",
        "BootFlag: 0x%x",
        "Loading %s",
        "Error: Cannot load a ramdisk (initrd) with an old kernel image.",
        "SetupHeaderSignature: 0x%x (HdrS)",
        "Version: 0x%x",
        "RealModeSwitch: 0x%x",
        "SetupSeg: 0x%x",
        "StartSystemSeg: 0x%x",
        "KernelVersion: 0x%x",
        "TypeOfLoader: 0x%x",
        "LoadFlags: 0x%x",
        "SetupMoveSize: 0x%x",
        "Code32Start: 0x%x",
        "RamdiskAddress: 0x%x",
        "RamdiskSize: 0x%x",
        "BootSectKludgeOffset: 0x%x",
        "BootSectKludgeSegment: 0x%x",
        "HeapEnd: 0x%x",
        "InitrdAddressMax: 0x%x",
        "Loading %s...",
        "Linux kernel '%s' not found.",
        "Linux initrd image '%s' not found.",
        "Booting Linux...",
        "Select an option:",
        "Last known good configuration is not supported yet!",
        "Enable FreeLdr debug channels",
        "Acceptable syntax: [level1]#channel1[,[level2]#channel2]",
        "level can be one of: trace,warn,fixme,err",
        "  if the level is ommited all levels",
        "  are enabled for the specified channel",
        "# can be either + or -",
        "channel can be one of the following:",
        "  all,warning,memory,filesystem,inifile,ui,disk,cache,registry,",
        "  reactos,linux,hwdetect,windows,peloader,scsiport,heap",
        "Examples:",
        "  trace+windows,trace+reactos",
        "  +hwdetect,err-disk",
        "  +peloader",
        "NOTE: all letters must be lowercase, no spaces allowed.",
        "Safe Mode",
        "Safe Mode with Networking",
        "Safe Mode with Command Prompt",
        "Enable Boot Logging",
        "Enable VGA Mode",
        "Last Known Good Configuration",
        "Directory Services Restore Mode",
        "Debugging Mode",
        "FreeLdr debugging",
        "Start ReactOS normally",
        "Custom Boot",
        "Reboot",
        "Operating Systems",
        "FreeLoader v%d.%d",
        "CacheInternalFindBlock() BlockNumber = %d",
        "../../boot/freeldr/freeldr/cache/blocklist.c",
        "CacheInternalFreeBlock()",
        "Dumping block list for BIOS drive 0x%x.",
        "BytesPerSector: %d.",
        "BlockSize: %d.",
        "CacheSizeLimit: %d.",
        "CacheSizeCurrent: %d.",
        "CacheBlockCount: %d.",
        "Cache Block: CacheBlock: 0x%x",
        "Cache Block: Block Number: %d",
        "Cache Block: Access Count: %d",
        "Cache Block: Block Data: 0x%x",
        "Cache Block: Locked In Cache: %d",
        "(%s:%d) Fatal Error in %s: CacheBlock->BlockData == NULL",
        "CacheInternalCheckCacheSizeLimits()",
        "CacheInternalAddBlockToCache() BlockNumber = %d",
        "CacheInternalOptimizeBlockList()",
        "CacheInternalGetBlockPointer() BlockNumber = %d",
        "Cache hit! BlockNumber: %d CacheBlock->BlockNumber: %d",
        "Cache miss! BlockNumber: %d",
        "CacheInternalDumpBlockList",
        "CacheBlockCount: %d",
        "../../boot/freeldr/freeldr/cache/cache.c",
        "CacheSizeLimit: %d",
        "CacheSizeCurrent: %d",
        "Initializing BIOS drive 0x%x.",
        "BytesPerSector: %d.",
        "BlockSize: %d.",
        "CacheSizeLimit: %d.",
        "CacheReadDiskSectors() DiskNumber: 0x%x StartSector: %I64d SectorCount: %d Buffer: 0x%x",
        "StartBlock: %d SectorOffsetInStartBlock: %d CopyLengthInStartBlock: %d EndBlock: %d SectorOffsetInEndBlock: %d BlockCount: %d",
        "1 - RtlCopyMemory(0x%x, 0x%x, %d)",
        "2 - RtlCopyMemory(0x%x, 0x%x, %d)",
        "3 - RtlCopyMemory(0x%x, 0x%x, %d)",
        "CacheReleaseMemory() MinimumAmountToRelease = %d",
        "no error",
        "bad command passed to driver",
        "address mark not found or bad sector",
        "diskette write protect error",
        "sector not found",
        "fixed disk reset failed",
        "diskette changed or removed",
        "bad fixed disk parameter table",
        "DMA overrun",
        "DMA access across 64k boundary",
        "bad fixed disk sector flag",
        "bad fixed disk cylinder",
        "unsupported track/invalid media",
        "invalid number of sectors on fixed disk format",
        "fixed disk controlled data address mark detected",
        "fixed disk DMA arbitration level out of range",
        "ECC/CRC error on disk read",
        "recoverable fixed disk data error, data fixed by ECC",
        "controller error (NEC for floppies)",
        "seek failure",
        "time out, drive not ready",
        "fixed disk drive not ready",
        "fixed disk undefined error",
        "fixed disk write fault on selected drive",
        "fixed disk status error/Error reg = 0",
        "sense operation failed",
        "unknown error code",
        "Error Code: 0x%lx",
        "Error: %s",
        "../../boot/freeldr/freeldr/disk/disk.c",
        "Invalid active partition information",
        "Dumping partition table for drive 0x%x:",
        "../../boot/freeldr/freeldr/disk/partition.c",
        "Boot record logical start sector = %d",
        "sizeof(MASTER_BOOT_RECORD) = 0x%x.",
        "-------------------------------------------",
        "Partition %d",
        "BootIndicator: 0x%x",
        "StartHead: 0x%x",
        "StartSector (Plus 2 cylinder bits): 0x%x",
        "StartCylinder: 0x%x",
        "SystemIndicator: 0x%x",
        "EndHead: 0x%x",
        "EndSector (Plus 2 cylinder bits): 0x%x",
        "EndCylinder: 0x%x",
        "SectorCountBeforePartition: 0x%x",
        "PartitionSectorCount: 0x%x",
        "No bootable (active) partitions found.",
        "Too many bootable (active) partitions found.",
        "(%s:%d) WARNING: %s is UNIMPLEMENTED!",
        "IoReadPartitionTable",
        "ramdisk(0)",
        "Loading ramdisk...",
        "RAM disk too big",
        "Failed to allocate memory for RAM disk",
        "Failed to read ramdisk",
        "Ext2Seek() NewFilePointer = %lu",
        "../../boot/freeldr/freeldr/fs/ext2.c",
        "Ext2GetFileInformation() FileSize = %d",
        "Ext2GetFileInformation() FilePointer = %d",
        "Ext2SearchDirectoryBufferForFile() DirectoryBuffer = 0x%x DirectorySize = %d FileName = %s",
        "Directory entry extends past end of directory file.",
        "Dumping directory entry at offset %d:",
        "EXT2 Directory Entry:",
        "inode = %d",
        "direntlen = %d",
        "namelen = %d",
        "filetype = %d",
        "name = ",
        "Ext2ReadSuperBlock()",
        "Out of memory.",
        "Dumping super block:",
        "total_inodes: %d",
        "total_blocks: %d",
        "reserved_blocks: %d",
        "free_blocks: %d",
        "free_inodes: %d",
        "first_data_block: %d",
        "log2_block_size: %d",
        "log2_fragment_size: %d",
        "blocks_per_group: %d",
        "fragments_per_group: %d",
        "inodes_per_group: %d",
        "mtime: %d",
        "utime: %d",
        "mnt_count: %d",
        "max_mnt_count: %d",
        "magic: 0x%x",
        "fs_state: %d",
        "error_handling: %d",
        "minor_revision_level: %d",
        "lastcheck: %d",
        "checkinterval: %d",
        "creator_os: %d",
        "revision_level: %d",
        "uid_reserved: %d",
        "gid_reserved: %d",
        "first_inode: %d",
        "inode_size: %d",
        "block_group_number: %d",
        "feature_compatibility: 0x%x",
        "feature_incompat: 0x%x",
        "feature_ro_compat: 0x%x",
        "unique_id = { 0x%x, 0x%x, 0x%x, 0x%x }",
        "volume_name = '%.16s'",
        "last_mounted_on = '%.64s'",
        "compression_info = 0x%x",
        "Invalid super block magic (0xef53)",
        "FreeLoader does not understand the revision of this EXT2/EXT3 filesystem.",
        "Please update FreeLoader.",
        "FreeLoader does not understand features of this EXT2/EXT3 filesystem.",
        "Please update FreeLoader.",
        "Ext2GroupCount: %d",
        "Ext2BlockSizeInBytes: %d",
        "Ext2BlockSizeInSectors: %d",
        "Ext2FragmentSizeInBytes: %d",
        "Ext2FragmentSizeInSectors: %d",
        "The fragment size must be equal to the block size.",
        "Ext2InodesPerBlock: %d",
        "Ext2GroupDescPerBlock: %d",
        "Ext2ReadBlock() BlockNumber = %d Buffer = 0x%x",
        "Error reading block %d - block out of range.",
        "Block is part of a sparse file. Zeroing input buffer.",
        "Ext2ReadGroupDescriptors()",
        "Ext2OpenVolume() DriveNumber = 0x%x VolumeStartSector = %d",
        "Ext2ReadPartialBlock() BlockNumber = %d StartingOffset = %d Length = %d Buffer = 0x%x",
        "Ext2ReadFileBig() BytesToRead = %d Buffer = 0x%x",
        "Block pointer list is NULL and file is not a fast symbolic link.",
        "Reading fast symbolic link data",
        "Ext2ReadGroupDescriptor()",
        "Dumping group descriptor:",
        "block_id = %d",
        "inode_id = %d",
        "inode_table_id = %d",
        "free_blocks = %d",
        "free_inodes = %d",
        "used_dirs = %d",
        "Ext2ReadInode() Inode = %d",
        "Error reading inode %ld - inode out of range.",
        "InodeGroupNumber = %d",
        "InodeBlockNumber = %d",
        "InodeOffsetInBlock = %d",
        "InodeBlockNumber (after group desc correction) = %d",
        "Dumping inode information:",
        "mode = 0x%x",
        "uid = %d",
        "size = %d",
        "atime = %d",
        "ctime = %d",
        "mtime = %d",
        "dtime = %d",
        "gid = %d",
        "nlinks = %d",
        "blockcnt = %d",
        "flags = 0x%x",
        "osd1 = 0x%x",
        "dir_blocks = { %u, %u, %u, %u, %u, %u, %u, %u, %u, %u, %u, %u }",
        "indir_block = %u",
        "double_indir_block = %u",
        "tripple_indir_block = %u",
        "version = %d",
        "acl = %d",
        "dir_acl = %d",
        "fragment_addr = %d",
        "osd2 = { %d, %d, %d }",
        "Ext2CopyIndirectBlockPointers() BlockCount = %d",
        "Ext2CopyDoubleIndirectBlockPointers() BlockCount = %d",
        "Ext2CopyTripleIndirectBlockPointers() BlockCount = %d",
        "Ext2ReadBlockPointerList()",
        "Ext2ReadDirectory() Inode = %d",
        "Inode is not a directory.",
        "DirectoryFileInfo.FileSize <= 0xFFFFFFFF",
        "Ext2LookupFile() FileName = %s",
        "Inode is not a regular file or symbolic link.",
        "Ext2OpenFile() FileName = %s",
        "File is a symbolic link",
        "Symbolic link path = %s",
        "Full file path = %s",
        "Ext2Open() FileName = %s",
        "FatSeek() NewFilePointer = %lu",
        "../../boot/freeldr/freeldr/fs/fat.c",
        "FatGetFileInformation() FileSize = %d",
        "FatGetFileInformation() FilePointer = %d",
        "FATX",
        "FATX16",
        "FATX32",
        "FatOpenVolume() DeviceId = %d",
        "Dumping boot sector:",
        "sizeof(FATX_BOOTSECTOR) = 0x%x.",
        "FileSystemType: %c%c%c%c.",
        "VolumeSerialNumber: 0x%x",
        "SectorsPerCluster: %d",
        "NumberOfFats: %d",
        "Unknown: 0x%x",
        "FatType %s",
        "sizeof(FAT32_BOOTSECTOR) = 0x%x.",
        "JumpBoot: 0x%x 0x%x 0x%x",
        "OemName: %c%c%c%c%c%c%c%c",
        "BytesPerSector: %d",
        "ReservedSectors: %d",
        "RootDirEntries: %d",
        "TotalSectors: %d",
        "MediaDescriptor: 0x%x",
        "SectorsPerFat: %d",
        "SectorsPerTrack: %d",
        "NumberOfHeads: %d",
        "HiddenSectors: %d",
        "TotalSectorsBig: %d",
        "SectorsPerFatBig: %d",
        "ExtendedFlags: 0x%x",
        "FileSystemVersion: 0x%x",
        "RootDirStartCluster: %d",
        "FsInfo: %d",
        "BackupBootSector: %d",
        "Reserved: 0x%x",
        "DriveNumber: 0x%x",
        "Reserved1: 0x%x",
        "BootSignature: 0x%x",
        "VolumeLabel: %c%c%c%c%c%c%c%c%c%c%c",
        "FileSystemType: %c%c%c%c%c%c%c%c",
        "BootSectorMagic: 0x%x",
        "sizeof(FAT_BOOTSECTOR) = 0x%x.",
        "Invalid boot sector magic (expected 0xaa55 found 0x%x)",
        "This file system has cluster sizes bigger than 64k.",
        "FreeLoader does not support this.",
        "FreeLoader is too old to work with this FAT32 filesystem.",
        "Please update FreeLoader.",
        "FatReadVolumeSectors() Failed to seek",
        "FatReadVolumeSectors() Failed to read",
        "FatOffset: %d",
        "ThisFatSecNum: %d",
        "ThisFatEntOffset: %d",
        "Unknown FAT type %d",
        "FatCountClustersInChain() StartCluster = %d",
        "FatCountClustersInChain() ClusterCount = %d",
        "FatGetClusterChainArray() StartCluster = %d",
        "FatSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x EntryCount = %d FileName = %s",
        "MSDOS Directory Entry:",
        "FileName[11] = %c%c%c%c%c%c%c%c%c%c%c",
        "Attr = 0x%x",
        "ReservedNT = 0x%x",
        "TimeInTenths = %d",
        "CreateTime = %d",
        "CreateDate = %d",
        "LastAccessDate = %d",
        "ClusterHigh = 0x%x",
        "Time = %d",
        "Date = %d",
        "ClusterLow = 0x%x",
        "Size = %d",
        "StartCluster = 0x%x",
        "FatReadClusterChain() StartClusterNumber = %d NumberOfClusters = %d Buffer = 0x%x",
        "FatReadFile() BytesToRead = %d Buffer = 0x%x",
        "Found cached buffer",
        "Trying to allocate (DirectorySize) %d bytes.",
        "FALSE",
        "FatBufferDirectory() DirectoryStartCluster = %d RootDirectory = %s",
        "TRUE",
        "FatLookupFile() FileName = %s",
        "FatXSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x EntryCount = %d FileName = %s",
        "FATX Directory Entry:",
        "FileNameSize = %d",
        "LastAccessTime = %d",
        "FatOpen() FileName = %s",
        "FAT12   ",
        "FAT16   ",
        "FAT32   ",
        "../../boot/freeldr/freeldr/fs/fs.c",
        "FsGetNumPathParts() Path = %s NumPathParts = %d",
        "FsGetFirstNameFromPath() Path = %s FirstName = %s",
        "Opening file '%s'...",
        "FsRegisterDevice() Prefix = %s",
        "IsoSeek() NewFilePointer = %lu",
        "../../boot/freeldr/freeldr/fs/iso.c",
        "IsoRead() Buffer = %p, N = %lu",
        "IsoRead() done",
        "IsoGetFileInformation() FileSize = %d",
        "IsoGetFileInformation() FilePointer = %d",
        "IsoLookupFile() FileName = %s",
        "IsoBufferDirectory() DirectoryStartSector = %d DirectoryLength = %d",
        "Trying to read (DirectoryCount) %d sectors.",
        "Trying to allocate (DirectoryLength) %d bytes.",
        "Name '.'",
        "Name '..'",
        "Name '%s'",
        "IsoSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x DirectoryLength = %d FileName = %s",
        "IsoOpen() FileName = %s",
        "CD001",
        "DataRunOffsetSize: %x",
        "../../boot/freeldr/freeldr/fs/ntfs.c",
        "DataRunLengthSize: %x",
        "DataRunOffset: %x",
        "DataRunLength: %x",
        "NtfsDiskRead - Offset: %I64d Length: %I64d",
        "Failed to allocate memory: %x",
        "NtfsSeek() NewFilePointer = %lu",
        "NtfsGetFileInformation() FileSize = %d",
        "NtfsGetFileInformation() FilePointer = %d",
        "- %s (%x)",
        "NtfsLookupFile() FileName = %s",
        "- Lookup: %s",
        "IndexRecordSize: %x IndexBlockSize: %x",
        "Large Index!",
        "Corrupted filesystem!",
        "BitmapDataSize: %x",
        "RecordOffset: %x IndexAllocationSize: %x",
        "File found",
        "Can't read MFT record",
        "NtfsLookupFile: Can't read MFT record",
        "NtfsLookupFile: Can't find data attribute",
        "- Failed",
        "- Lookup: %x",
        "NtfsOpen() FileName = %s",
        "NTFS",
        "ClusterSize: 0x%x",
        "ClustersPerMftRecord: %d",
        "ClustersPerIndexRecord: %d",
        "MftRecordSize: 0x%x",
        "IndexRecordSize: 0x%x",
        "Reading MFT index...",
        "Failed to seek to Master File Table record.",
        "Failed to read the Master File Table record.",
        "Failed to allocate memory.",
        "Searching for DATA attribute...",
        "Can't find data attribute for Master File Table.",
        "!PXE",
        "!PXE structure found at %p",
        "../../boot/freeldr/freeldr/fs/pxe.c",
        "PxeCall(0x%x, %p)",
        "PxeCall(0x%x, %p) failed with exit=%d status=0x%x",
        "PxeCall(0x%x, %p) succeeded, but returned error status 0x%x",
        "net(0)",
        "IniFileInitialize()",
        "../../boot/freeldr/freeldr/inifile/ini_init.c",
        "Error opening freeldr.ini or file not found.",
        "You need to re-install FreeLoader.",
        "Error while getting informations about freeldr.ini.",
        "You need to re-install FreeLoader.",
        "Out of memory while loading freeldr.ini.",
        "Error while reading freeldr.ini.",
        "IniOpenSection() SectionName = %s",
        "../../boot/freeldr/freeldr/inifile/inifile.c",
        "IniOpenSection() Found it! SectionId = 0x%x",
        "IniOpenSection() Section not found.",
        "IniGetNumSectionItems() SectionId = 0x%x",
        "IniGetNumSectionItems() Item count = %d",
        ".001 NameSize = %d ValueSize = %d",
        "IniReadSettingByNumber() SectionId = 0x%x",
        "IniReadSettingByNumber() Setting number %d not found.",
        "IniReadSettingByNumber() Setting number %d found.",
        "IniReadSettingByNumber() Setting name = %s",
        "IniReadSettingByNumber() Setting value = %s",
        "1 NameSize = %d ValueSize = %d",
        "2 NameSize = %d ValueSize = %d",
        "3 NameSize = %d ValueSize = %d",
        "4 NameSize = %d ValueSize = %d",
        "IniReadSettingByName() SectionId = 0x%x",
        "IniReadSettingByName() Setting '%s' found.",
        "IniReadSettingByName() Setting value = %s",
        "IniReadSettingByName() Setting '%s' not found.",
        "IniParseFile() IniFileSize: %d",
        "../../boot/freeldr/freeldr/inifile/parse.c",
        "Error: freeldr.ini:%lu: Setting '%s' found outside of a [section].",
        "Press any key to continue...",
        "Parsed %d sections and %d settings.",
        "IniParseFile() done.",
        "AddMemoryDescriptor(0x%lx-0x%lx [0x%lx pages])",
        "../../boot/freeldr/freeldr/mm/meminit.c",
        "PageCount > 0",
        "Inserting at i=%ld: (0x%lx:0x%lx)",
        "Adding i=%ld: (0x%lx:0x%lx)",
        "Could not get NtHeaders!",
        "FreeLdr FileHeader is invalid.",
        "FreeLdr OptionalHeader is invalid.",
        "lo/hi %lx %lx",
        "MmGetAddressablePageCountIncludingHoles() returning 0x%x",
        "MmFindLocationForPageLookupTable() returning 0x%x",
        "MmMarkPagesInLookupTable()",
        "Memory (0x%lx:0x%lx) outside of lookup table! Valid range: 0x%lx-0x%lx.",
        "MmMarkPagesInLookupTable() Done",
        "MmInitPageLookupTable()",
        "Marking pages 0x%lx-0x%lx as type %s",
        "Ignoring pages 0x%lx-0x%lx (%s)",
        "Marking the page lookup table pages as reserved StartPage: 0x%x PageCount: 0x%x",
        "Alloc low memory, LastFreePageHint 0x%x, TPC 0x%x",
        "Initializing Memory Manager.",
        "System Memory Map (Base Address, Length, Type):",
        "Error initializing memory manager!",
        "Memory Manager initialized. 0x%x pages available.",
        "Unknown memory",
        "Free memory",
        "Bad memory",
        "LoadedProgram",
        "FirmwareTemporary",
        "FirmwarePermanent",
        "OsloaderHeap",
        "OsloaderStack",
        "SystemCode",
        "HalCode",
        "BootDriver",
        "RegistryData",
        "MemoryData",
        "NlsData",
        "SpecialMemory",
        "Reserve",
        "MmAllocateMemory() called for 0 bytes. Returning NULL.",
        "../../boot/freeldr/freeldr/mm/mm.c",
        "Memory allocation failed: MmAllocateMemory() called for 0 bytes.",
        "Memory allocation failed in MmAllocateMemory(). Not enough free memory to allocate %d bytes.",
        "Memory allocation failed: out of memory.",
        "Allocated %d bytes (%d pages) of memory (type %ld) starting at page 0x%lx.",
        "Memory allocation pointer: 0x%x",
        "MmAllocateMemoryAtAddress() called for 0 bytes. Returning NULL.",
        "Memory allocation failed: MmAllocateMemoryAtAddress() called for 0 bytes.",
        "Memory allocation failed in MmAllocateMemoryAtAddress(). Not enough free memory to allocate %d bytes (requesting %d pages but have only %d). ",
        "Memory allocation failed in MmAllocateMemoryAtAddress(). Not enough free memory to allocate %d bytes at address %p.",
        "Allocated %d bytes (%d pages) of memory starting at page %d.",
        "MmAllocateHighestMemoryBelowAddress() called for 0 bytes. Returning NULL.",
        "Memory allocation failed: MmAllocateHighestMemoryBelowAddress() called for 0 bytes.",
        "Memory allocation failed in MmAllocateHighestMemoryBelowAddress(). Not enough free memory to allocate %d bytes.",
        "----------- Memory Allocation Bitmap -----------",
        "%08x:",
        "../../boot/freeldr/freeldr/mm/heap.c",
        "(Next->Tag == 0) || (Next->Tag == 'dnE#')",
        "Next->Data[0].Blink == Block - &Heap->Blocks",
        "(Previous->Tag == 0) || (Previous->Tag == 'dnE#')",
        "Previous->Data[0].Flink == Block - &Heap->Blocks",
        "FreeBlock->Tag == 0",
        "HeapCreate(MemoryType=%ld)",
        "HEAP: Failed to allocate heap of size 0x%lx, Type",
        "Remaining = %ld",
        "*REDZONE_SIZE(Block) <= Block->Size * sizeof(HEAP_BLOCK)",
        "*REDZONE_LOW(Block) == REDZONE_MARK",
        "*REDZONE_HI(Block) == REDZONE_MARK",
        "HeapRelease(%p)",
        "HeapRelease() done, freed %lu of %lu pages",
        "Heap statistics for default heap:",
        "CurrentAlloc=0x%lx, MaxAlloc=0x%lx, LargestAllocation=0x%lx",
        "NumAllocs=%ld, NumFrees=%ld",
        "AllocTime = %I64d, FreeTime = %I64d, sum = %I64d",
        "Heap statistics for temp heap:",
        "CurrentAlloc=0x%lx, MaxAlloc=0x%lx, LargestAllocation=0x%lx",
        "NumAllocs=%ld, NumFrees=%ld",
        "HEAP: Allocation of 0x%lx bytes too large",
        "Block->Tag == 0",
        "HeapAllocate(%p, %ld, %.4s) -> return %p",
        "HEAP: nothing suitable found for 0x%lx bytes",
        "HeapFree(%p, %p)",
        "Tag != 'dnE#'",
        "HEAP: trying to free %p outside of heap %p",
        "FALSE",
        "HEAP: Bad tag! Pointer=%p: block tag '%.4s', requested '%.4s', size=0x%lx",
        "MmInitializeHeap()",
        "FrLdrDefaultHeap",
        "FrLdrTempHeap",
        "MmInitializeHeap() done, default heap %p, temp heap %p",
        "../../boot/freeldr/freeldr/reactos/registry.c",
        "RemainingPath->Buffer[0] == '\\\\'",
        "RegpFindSubkeyInIndex('%wZ')",
        "FALSE",
        "SubKeyNode->Signature == CM_KEY_NODE_SIGNATURE",
        " RegpFindSubkeyInIndex: checking '%.*s'",
        "RegImportBinaryHive(%p, 0x%lx)",
        "Invalid hive Signature!",
        "RegImportBinaryHive done",
        "RegEnumKey(%p, %lu, %p, %p->%u)",
        "KeyNode->Signature == CM_KEY_NODE_SIGNATURE",
        "RegEnumKey index out of bounds",
        "IndexCell: %x, SubKeyCounts: %x",
        "RegEnumKey done -> %u, '%.*s'",
        "RegOpenKey(%p, '%S', %p)",
        "RegOpenKey: absolute path",
        "RegOpenKey: invalid path '%S' (%wZ)",
        "RegOpenKey: %wZ / %wZ / %wZ",
        "RegOpenKey: RemainingPath '%wZ'",
        "RegOpenKey: next element '%wZ'",
        "Did not find sub key '%wZ' (full %S)",
        "RegOpenKey done",
        "RegQueryValue(%p, '%S', %p, %p, %p)",
        "RegQueryValue no values in key (%.*s)",
        "ValueListCell: %x",
        "checking %.*s",
        "RegQueryValue success",
        "RegQueryValue value not found",
        "RegInitCurrentControlSet",
        "RegOpenKey() failed (Error %u)",
        "RegQueryValue('Default') failed (Error %u)",
        "RegOpenKey(SystemKey) failed (Error %lu)",
        "RegOpenKey(CurrentControlSetKey) failed (Error %lu)",
        "RegInitCurrentControlSet done",
        "RegEnumValue(%p, %lu, %S, %p, %p, %p, %p (%lu))",
        "RegEnumValue: index invalid",
        "ValueCell != NULL",
        "RegEnumValue done",
        "ramdisk(0)",
        "multi(0)disk(0)",
        "fdisk(",
        "cdrom(",
        "rdisk(",
        ")partition(",
        "scsi(%lu)disk(%lu)rdisk(%lu)partition(%lu)",
        "scsi(%lu)cdrom(%lu)fdisk(%lu)",
        "multi(%lu)disk(%lu)rdisk(%lu)partition(%lu)",
        "multi(%lu)disk(%lu)cdrom(%lu)",
        "multi(%lu)disk(%lu)fdisk(%lu)",
        "fdisk(%d)",
        "rdisk(%d)partition(%d)",
        "Use ",
        " and ",
        " to move the highlight to your choice.",
        "Press ENTER to choose.",
        "Press any key",
        "Light",
        "Medium",
        "Dark",
        "Black",
        "Blue",
        "Green",
        "Cyan",
        "Magenta",
        "Brown",
        "Gray",
        "DarkGray",
        "LightBlue",
        "LightGreen",
        "LightCyan",
        "LightRed",
        "LightMagenta",
        "Yellow",
        "White",
        "Press ENTER to continue",
        "by ReactOS Team",
        "<www.reactos.org>",
        "F8 for Options",
        "Press ENTER to continue, or ESC to cancel",
        "Use ",
        " and ",
        " to select, then press ENTER.",
        "MessageBox",
        "Initializing User Interface.",
        "../../boot/freeldr/freeldr/ui/ui.c",
        "Reading in UI settings from [Display] section.",
        "Display",
        "DisplayMode",
        "MinimalUI",
        "TitleText",
        "TimeText",
        "StatusBarColor",
        "StatusBarTextColor",
        "BackdropTextColor",
        "BackdropColor",
        "BackdropFillStyle",
        "TitleBoxTextColor",
        "TitleBoxColor",
        "MessageBoxTextColor",
        "MessageBoxColor",
        "MenuTextColor",
        "MenuColor",
        "TextColor",
        "SelectedTextColor",
        "SelectedColor",
        "EditBoxTextColor",
        "EditBoxColor",
        "SpecialEffects",
        "ShowTime",
        "MenuBox",
        "CenterMenu",
        "UiInitialize() returning TRUE.",
        "January ",
        "February ",
        "March ",
        "April ",
        "May ",
        "June ",
        "July ",
        "August ",
        "September ",
        "October ",
        "November ",
        "December ",
        "../../boot/freeldr/freeldr/windows/conversion.c",
        "ListHeadPa->Flink != 0",
        "ListHeadPa->Blink != 0",
        "ConvertConfigToVA(Start 0x%X)",
        "Device 0x%X class %d type %d id '%s', parent %p",
        "WinLdrpCompareDllName: %s and %wZ, Length = %d UN->Length %d",
        "../../boot/freeldr/freeldr/windows/peloader.c",
        "WinLdrCheckForLoadedDll: DllName %s",
        "WinLdrCheckForLoadedDll: DTE %p, EP %p, base %p name '%.*ws'",
        "WinLdrCheckForLoadedDll: LoadedEntry %X",
        "WinLdrAllocateDataTableEntry(, '%s', '%s', %p)",
        "Inserting DTE %p, name='%.*S' DllBase=%p ",
        "WinLdrLoadImage(%s, %ld, *)",
        "Error reading from file",
        "Error - no NT header found",
        "Not an executable image",
        "Failed to alloc pages for image",
        "Base PA: 0x%X, VA: 0x%X",
        "Error seeking to start of file",
        "Error reading headers",
        "SH->VA: 0x%X",
        "WinLdrLoadImage(): Error reading section from file!",
        "WinLdrLoadImage(): SORD %d < VS %d",
        "Relocating %p -> %p",
        "FreeLdr",
        "WinLdrLoadImage() done, PA = %p",
        "Loading referenced DLL: %s",
        "WinLdrLoadImage() failed",
        "WinLdrAllocateDataTableEntry() failed",
        "WinLdrScanImportDescriptorTable() calling ourselves for %S",
        "WinLdrScanImportDescriptorTable() failed",
        "DllBase == NULL!",
        "Did not find export '%s'!",
        "Ordinal number is invalid!",
        "WinLdrpBindImportName(): ForwarderName %s",
        "WinLdrpLoadAndScanReferencedDll() failed to load forwarder dll.",
        "WinLdrScanImportDescriptorTable(): %wZ ImportTable = 0x%X",
        "WinLdrScanImportDescriptorTable(): Looking at %s",
        "WinLdrpLoadAndScanReferencedDll() failed",
        "WinLdrpScanImportAddressTable(): DllBase 0x%X, ImageBase 0x%X, ThunkData 0x%X",
        "Error, DllBase == NULL!",
        "WinLdrpScanImportAddressTable(): ExportDirectory 0x%X",
        "DllBase=%p(%p)",
        "WinLdrpScanImportAddressTable() failed: ImportName = '%s', DirectoryPath = '%s'",
        "KDCOM.DLL",
        "Loading %s...",
        "Loading %s failed",
        "../../boot/freeldr/freeldr/windows/winldr.c",
        "%s loaded successfully at %p",
        "NTOSKRNL.EXE",
        "HAL.DLL",
        "DEBUGPORT=",
        "DriverPath: %s, DllName: %s, LPB",
        "%s%wZ",
        "WinLdrAllocateDataTableEntry() failed",
        "%s%s",
        "WinLdrScanImportDescriptorTable() failed for %s",
        "Failed to allocate memory for system block!",
        "BootDriver %wZ DTE %08X RegPath: %wZ",
        "Can't load boot driver '%wZ'!",
        "Loading module %s",
        "Loaded %s at 0x%x with size 0x%x",
        "ArcBoot: %s",
        "SystemRoot: %s",
        "Options: %s",
        "WinLdrInitializePhase1() completed",
        "BP %08X PC %04X MT %d",
        "ArcDisk %s checksum: 0x%X, signature: 0x%X",
        "LoadAndBootWindowsCommon()",
        "Error loading NTOS core.",
        "Loading boot drivers...",
        "Boot drivers loaded with status %d",
        "Hello from paged mode, KiSystemStartup %p, LoaderBlockVA %p!",
        "loaded",
        "not loaded",
        "scanned",
        "not scanned",
        "Operating Systems",
        "Loading NT...",
        "SystemPath",
        "LiveCD",
        "Options",
        "BootOptions: '%s'",
        "/RDPATH=",
        "BootPath: '%s'",
        "Loading system hive...",
        "SYSTEM hive %s",
        "MempAddMemoryBlock(BasePage=0x%lx, PageCount=0x%lx, Type=%ld)",
        "../../boot/freeldr/freeldr/windows/wlmemory.c",
        "Error: no MAD slots left!",
        "BP=0x%X PC=0x%X %s",
        "MempSetupPagingForRegion(BasePage=0x%lx, PageCount=0x%lx, Type=%ld)",
        "Error during MempSetupPaging",
        "Can not retrieve the current memory map",
        "Got memory map with %d entries",
        "MadCount: %d",
        "Memory Descriptor List prepared, printing PDE",
        "ExceptionBlock    ",
        "SystemBlock       ",
        "Free              ",
        "Bad               ",
        "LoadedProgram     ",
        "FirmwareTemporary ",
        "FirmwarePermanent ",
        "OsloaderHeap      ",
        "OsloaderStack     ",
        "SystemCode        ",
        "HalCode           ",
        "BootDriver        ",
        "ConsoleInDriver   ",
        "ConsoleOutDriver  ",
        "StartupDpcStack   ",
        "StartupKernelStack",
        "StartupPanicStack ",
        "StartupPcrPage    ",
        "StartupPdrPage    ",
        "RegistryData      ",
        "MemoryData        ",
        "NlsData           ",
        "SpecialMemory     ",
        "BBTMemory         ",
        "AnsiFileSize: %d",
        "../../boot/freeldr/freeldr/windows/wlregistry.c",
        "OemFileSize: %d",
        "LanguageFileSize: %d",
        "Error reading NLS file!",
        "Failed to open the 'ServiceGroupOrder' key (rc %d)",
        "Failed to open the 'GroupOrderList' key (rc %d)",
        "Failed to open the 'Services' key (rc %d)",
        "RegQueryValue(): rc %d",
        "BufferSize: %d ",
        "GroupNameBuffer: '%S' ",
        "Driver group: '%S'",
        "RegEnumKey(): rc %d",
        "ImagePath: not found",
        "%s\\system32\\drivers\\%S.sys",
        "%s%S",
        "ImagePath: '%s'",
        "Adding boot driver: '%s'",
        "Failed to add boot driver",
        "Service %d: '%S'",
        "%ssystem32\\drivers\\%S.sys",
        "  Adding boot driver: '%s'",
        " Failed to add boot driver",
        "NLS data %s %s %s",
        "NLS data loaded with status %d",
        "Getting NLS names from registry failed!",
        "Opening hive file failed!",
        "Hive file has 0 size!",
        "Unable to alloc memory for a hive!",
        "Unable to read from hive file!",
        "  Adding filesystem service %S",
        " Failed to add filesystem service",
        "  No required filesystem service",
        "SYSTEM",
        "Importing binary hive failed!",
        "Initializing CurrentControlSet link failed!",
        "CustomBootDisk%u%u%u%u%u%u",
        "Drive",
        "BootType",
        "BootDrive",
        "CustomBootPartition%u%u%u%u%u%u",
        "Partition",
        "BootPartition",
        "CustomBootSectorFile%u%u%u%u%u%u",
        "BootSector",
        "BootSectorFile",
        "CustomReactOS%u%u%u%u%u%u",
        "Windows2003",
        "SystemPath",
        "Options",
        "CustomLinux%u%u%u%u%u%u",
        "Linux",
        "Kernel",
        "Initrd",
        "CommandLine",
        "Custom Linux Setup",
        "Disk",
        "Boot Sector File",
        "ReactOS",
        "Please choose a boot method:",
        "The system will now reboot.",
        "Press ENTER to boot your custom boot setup.",
        "Enter the options you want passed to the kernel.",
        "Examples:",
        "/DEBUG /DEBUGPORT=COM1 /BAUDRATE=115200",
        "/FASTDETECT /SOS /NOGUIBOOT",
        "/BASEVIDEO /MAXMEM=64",
        "/KERNEL=NTKRNLMP.EXE /HAL=HALMPS.DLL",
        "Enter the path to your ReactOS system directory.",
        "Examples:",
        "\\REACTOS",
        "\\ROS",
        "Enter the Linux kernel command line.",
        "Examples:",
        "root=/dev/hda1",
        "root=/dev/fd0 read-only",
        "root=/dev/sdb1 init=/sbin/init",
        "Enter the initrd image path.",
        "Examples:",
        "/initrd.gz",
        "/boot/root.img.gz",
        "Leave blank for no initial ram disk.",
        "Enter the Linux kernel image path.",
        "Examples:",
        "/vmlinuz",
        "/boot/vmlinuz-2.4.18",
        "Enter the boot sector file path.",
        "Examples:",
        "\\BOOTSECT.DOS",
        "/boot/bootsect.dos",
        "Enter the boot partition.",
        "Enter 0 for the active (bootable) partition.",
        "Enter the boot drive.",
        "Examples:",
        "fd0 - first floppy drive",
        "hd0 - first hard drive",
        "hd1 - second hard drive",
        "cd0 - first CD-ROM drive.",
        "BIOS drive numbers may also be used:",
        "0 - first floppy drive",
        "0x80 - first hard drive",
        "0x81 - second hard drive",
        "DriveMap",
        "Max DriveMap count exceeded in section [%s]:",
        "%s=%s",
        "Error in DriveMap setting in section [%s]:",
        "%s=%s",
        "Mapping BIOS drive 0x%x to drive 0x%x",
        "../../boot/freeldr/freeldr/arch/i386/drivemap.c",
        "Installing Int13 drive map for %d drives.",
        "Removing any previously installed Int13 drive map.",
        "DetectHardware()",
        "../../boot/freeldr/freeldr/arch/i386/hardware.c",
        "Failed to allocate resource descriptor",
        "Disk %x: %u Cylinders  %u Heads  %u Sectors  %u Bytes",
        "$PnP",
        "PnP-BIOS not supported",
        "PnP-BIOS supported",
        "Signature '%c%c%c%c'",
        "PnP-BIOS function 'Get Number of System Device Nodes' not supported",
        "PnP-BIOS failed to enumerate device nodes",
        "MaxNodeSize %u  NodeCount %u",
        "Estimated buffer size %u",
        "Node: %u  Size %u (0x%x)",
        "Buffer too small!",
        "Real buffer size: %u",
        "Resource size: %u",
        "PNP BIOS",
        "Created key: DiskController\\0",
        "Failed to allocate a full resource descriptor",
        "Reading disk geometry failed",
        "Floppy count: %u",
        "FLOPPY%d",
        "DetectSerialPorts()",
        "Found COM%u port at 0x%x",
        "COM%ld",
        "DetectSerialPointerPeripheral()",
        "Mouse data: %x %x %x %x",
        "Microsoft Mouse with 3-buttons detected",
        "Microsoft Wheel Mouse detected",
        "Microsoft Mouse with 2-buttons detected",
        "PnP ID length: %u",
        "PnP ID string: %s",
        "Identifier string: %s",
        "Created key: PointerPeripheral\\0",
        "DetectParallelPorts() called",
        "Parallel port %u: %x",
        "PARALLEL%ld",
        "DetectParallelPorts() done",
        "Created key: KeyboardController\\0",
        "PCAT_ENHANCED",
        "Created key: KeyboardPeripheral\\0",
        "Detected PS2 port",
        "Created key: PointerController\\0",
        "Detected PS2 mouse",
        "MICROSOFT PS2 MOUSE",
        "VESA version %c.%c",
        "VESA not supported",
        "Created key: DisplayController\\0",
        "DetectHardware() Done",
        "RSD PTR ",
        "ACPI supported",
        "../../boot/freeldr/freeldr/arch/i386/hwacpi.c",
        "ACPI not supported",
        "Failed to allocate resource descriptor",
        "RSDT %p, data size %x",
        "ACPI BIOS",
        "Found APM BIOS",
        "../../boot/freeldr/freeldr/arch/i386/hwapm.c",
        "AH: %x",
        "AL: %x",
        "BH: %x",
        "BL: %x",
        "CX: %x",
        "No APM BIOS found",
        "Reading MBR failed",
        "../../boot/freeldr/freeldr/arch/i386/hwdisk.c",
        "Signature: %x",
        "Checksum: %x",
        "multi(0)disk(0)rdisk(%lu)",
        "multi(0)disk(0)rdisk(%u)partition(0)",
        "multi(0)disk(0)rdisk(%u)partition(%lu)",
        "Identifier: %s",
        "BIOS reports success for disk %d but data didn't change",
        "BIOS reports %d harddisk%s",
        "0123456789abcdef",
        "Found PCI bios",
        "../../boot/freeldr/freeldr/arch/i386/hwpci.c",
        "AL: %x",
        "BH: %x",
        "BL: %x",
        "CL: %x",
        "No PCI bios found",
        "Failed to allocate resource descriptor",
        "PCI BIOS",
        "Found signature",
        "Invalid routing table",
        "Valid checksum",
        "Table size: %u",
        "PCI Real-mode IRQ Routing Table",
        "Frames:",
        "%p  ",
        "An error occured in FreeLoader",
        "FreeLoader v3.0",
        "Report this error to the ReactOS Development mailing list <ros-dev@reactos.org>",
        "0x%02lx: %s",
        "EAX: %.8lx        ESP: %.8lx        CR0: %.8lx        DR0: %.8lx",
        "EBX: %.8lx        EBP: %.8lx        CR1: ????????        DR1: %.8lx",
        "ECX: %.8lx        ESI: %.8lx        CR2: %.8lx        DR2: %.8lx",
        "EDX: %.8lx        EDI: %.8lx        CR3: %.8lx        DR3: %.8lx",
        "                                                               DR6: %.8lx",
        "                                                               DR7: %.8lx",
        "CS: %.4lx        EIP: %.8lx",
        "DS: %.4lx        ERROR CODE: %.8lx",
        "ES: %.4lx        EFLAGS: %.8lx",
        "FS: %.4lx        GDTR Base: %.8lx Limit: %.4x",
        "GS: %.4lx        IDTR Base: %.8lx Limit: %.4x",
        "SS: %.4lx        LDTR: %.4lx TR: %.4lx",
        "Instructionstream: %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x ",
        "A problem has been detected and FreeLoader boot has been aborted.",
        "%ld: %s",
        "Location: %s:%ld",
        "Bug Information:",
        "    %p",
        "    %p",
        "    %p",
        "    %p",
        "    %p",
        "Exception 00: DIVIDE BY ZERO",
        "Exception 01: DEBUG EXCEPTION",
        "Exception 02: NON-MASKABLE INTERRUPT EXCEPTION",
        "Exception 03: BREAKPOINT (INT 3)",
        "Exception 04: OVERFLOW",
        "Exception 05: BOUND EXCEPTION",
        "Exception 06: INVALID OPCODE",
        "Exception 07: FPU NOT AVAILABLE",
        "Exception 08: DOUBLE FAULT",
        "Exception 09: COPROCESSOR SEGMENT OVERRUN",
        "Exception 0A: INVALID TSS",
        "Exception 0B: SEGMENT NOT PRESENT",
        "Exception 0C: STACK EXCEPTION",
        "Exception 0D: GENERAL PROTECTION FAULT",
        "Exception 0E: PAGE FAULT",
        "Exception 0F: Reserved",
        "Exception 10: COPROCESSOR ERROR",
        "Exception 11: ALIGNMENT CHECK",
        "Exception 12: MACHINE CHECK",
        "DiskResetController(0x%x) DISK OPERATION FAILED -- RESETTING CONTROLLER",
        "../../boot/freeldr/freeldr/arch/i386/i386disk.c",
        "TRUE",
        "FALSE",
        "PcDiskInt13ExtensionsSupported()",
        "Using cached value %s for drive 0x%x",
        "Suspicious API subset support bitmap 0x%x on device 0x%lx",
        "DiskGetExtendedDriveParameters()",
        "size of buffer:                          %x",
        "information flags:                       %x",
        "number of physical cylinders on drive:   %u",
        "number of physical heads on drive:       %u",
        "number of physical sectors per track:    %u",
        "total number of sectors on drive:        %I64u",
        "bytes per sector:                        %u",
        "EED configuration parameters:            %x:%x",
        "SpecPtr:                                 %x",
        "physical I/O port base address:          %x",
        "disk-drive control port address:         %x",
        "drive flags:                             %x",
        "proprietary information:                 %x",
        "IRQ for drive:                           %u",
        "sector count for multi-sector transfers: %u",
        "DMA control:                             %x",
        "programmed I/O control:                  %x",
        "drive options:                           %x",
        "signature:                             %x",
        "BiosIsVesaSupported()",
        "../../boot/freeldr/freeldr/arch/i386/i386vid.c",
        "AL = 0x%x",
        "AH = 0x%x",
        "VESA BIOS call failed",
        "Supported.",
        "SvgaInfo->Signature[4] = %c%c%c%c",
        "SvgaInfo->VesaVersion = v%d.%d",
        "SvgaInfo->OemNamePtr = 0x%x",
        "SvgaInfo->Capabilities = 0x%x",
        "SvgaInfo->VideoMemory = %dK",
        "---VBE v2.0 ---",
        "SvgaInfo->OemSoftwareVersion = v%d.%d",
        "SvgaInfo->VendorNamePtr = 0x%x",
        "SvgaInfo->ProductNamePtr = 0x%x",
        "SvgaInfo->ProductRevisionStringPtr = 0x%x",
        "SvgaInfo->VBE/AF Version = 0x%x (BCD WORD)",
        "Bad signature in VESA information (%c%c%c%c)",
        "Section [%s] not found in freeldr.ini.",
        "BootSectorFile",
        "Boot sector file not specified for selected OS!",
        "Unable to read boot sector.",
        "Invalid boot sector magic (0xaa55)",
        "Booting...",
        "BootDrive",
        "Boot drive not specified for selected OS!",
        "BootPartition",
        "Boot partition not specified for selected OS!",
        "Unable to read partition's boot sector.",
        "Unable to read boot sector",
        "PcDiskResetController(0x%x) DISK OPERATION FAILED -- RESETTING CONTROLLER",
        "../../boot/freeldr/freeldr/arch/i386/pcdisk.c",
        "TRUE",
        "FALSE",
        "PcDiskReadLogicalSectors() DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d Buffer: 0x%x",
        "Using Int 13 Extensions for read. DiskInt13ExtensionsSupported(%d) = %s",
        "PcDiskReadLogicalSectorsLBA() DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d Buffer: 0x%x",
        "((ULONG_PTR)Buffer) <= 0xFFFFF",
        "Packet->LBABlockCount == SectorCount",
        "Disk Read Failed in LBA mode: %x (DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d)",
        "PcDiskReadLogicalSectorsCHS()",
        "Disk read exceeds drive geometry limits.",
        "Disk Read Failed in CHS mode, after retrying 3 times: %x",
        "DiskGetDriveGeometry()",
        "TRUE",
        "FALSE",
        "../../boot/freeldr/freeldr/arch/i386/pcmem.c",
        "PcBiosMapCount == 0",
        "GetBiosMemoryMap()",
        "Memory Map Entry %d",
        "Int15h AX=E820h",
        "EAX = 0x%x",
        "EBX = 0x%x",
        "ECX = 0x%x",
        "CF set = %s",
        "BaseAddress: 0x%llx",
        "Length: 0x%llx",
        "Type: 0x%lx",
        "Reserved: 0x%lx",
        "End Of System Memory Map!",
        "GetExtendedMemoryConfiguration()",
        "Int15h AX=E801h",
        "AX = 0x%x",
        "BX = 0x%x",
        "CX = 0x%x",
        "DX = 0x%x",
        "CF set = %s",
        "Int15h AH=88h",
        "Int15h Failed",
        "CMOS reports: 0x%x",
        "GetConventionalMemorySize()",
        "Int12h",
        "AX = 0x%x",
        "Dumping resulting memory map:",
        "BasePage=0x%lx, PageCount=0x%lx, Type=%s",
        "../../boot/freeldr/freeldr/arch/i386/pcvideo.c",
        "BiosVesaGetSVGAModeInformation() mode 0x%x",
        "ModeAttributes = 0x%x",
        "WindowAttributesA = 0x%x",
        "WindowAttributesB = 0x%x",
        "WindowGranularity = %dKB",
        "WindowSize = %dKB",
        "WindowAStartSegment = 0x%x",
        "WindowBStartSegment = 0x%x",
        "WindowPositioningFunction = 0x%x",
        "BytesPerScanLine = %d",
        "WidthInPixels = %d",
        "HeightInPixels = %d",
        "CharacterWidthInPixels = %d",
        "CharacterHeightInPixels = %d",
        "NumberOfMemoryPlanes = %d",
        "BitsPerPixel = %d",
        "NumberOfBanks = %d",
        "MemoryModel = %d",
        "BankSize = %d",
        "NumberOfImagePlanes = %d",
        "---VBE v1.2+ ---",
        "RedMaskSize = %d",
        "RedMaskPosition = %d",
        "GreenMaskSize = %d",
        "GreenMaskPosition = %d",
        "BlueMaskSize = %d",
        "BlueMaskPosition = %d",
        "ReservedMaskSize = %d",
        "ReservedMaskPosition = %d",
        "CGA or other display adapter detected.",
        "Using 80x25 text mode.",
        "EGA display adapter detected.",
        "VGA display adapter detected.",
        "NORMAL_VGA",
        "EXTENDED_VGA",
        "Error: unable to set video display mode 0x%x",
        "Defaulting to 80x25 text mode.",
        "Press any key to continue.",
        "(%s:%d) WARNING: %s is UNIMPLEMENTED!",
        "PcVideoCopyOffScreenBufferToVRAM",
        "rrrr",
        "oooo",
        "READ:DRV=%d:LBA=1:BLK=%d:SC=0x%x:CM=0x%x",
        "../../boot/freeldr/freeldr/arch/i386/xboxdisk.c",
        "READ:DRV=%d:LBA=0:CH=0x%x:CL=0x%x:HD=0x%x:SN=0x%x:SC=0x%x:CM=0x%x",
        "Buffer size exceeded!",
        "Read %lu sectors of junk!",
        "status=0x%x",
        "waited %d usecs for busy to clear",
        "Drive is BUSY for too long",
        "Invalid drive number",
        "48bit LBA required but not implemented",
        "XboxDiskPolledRead() failed",
        "BytesPerSector %d",
        "Cylinders %d",
        "Heads %d",
        "Sectors %d",
        "DetectHardware()",
        "../../boot/freeldr/freeldr/arch/i386/xboxhw.c",
        "Failed to allocate resource descriptor",
        "BIOS reports success for disk %d but data didn't change",
        "BIOS reports %d harddisk%s",
        "Disk %x: %u Cylinders  %u Heads  %u Sectors  %u Bytes",
        "Failed to allocate a full resource descriptor",
        "Reading disk geometry failed",
        "Reading MBR failed",
        "Signature: %x",
        "Checksum: %x",
        "multi(0)disk(0)rdisk(%lu)",
        "multi(0)disk(0)rdisk(%u)partition(0)",
        "multi(0)disk(0)rdisk(%u)partition(%lu)",
        "Identifier: %s",
        "DetectHardware() Done",
        "Created key: DiskController\\0",
        "0123456789ABCDEF",
        "NumPageTables = %d",
        "../../boot/freeldr/freeldr/arch/i386/winldr.c",
        "There was a problem allocating two adjacent blocks of memory!",
        "Impossible to allocate memory block for page tables!",
        "WARNING! Entry: %X > 1023",
        "MempSetupPaging: SP 0x%X, Number: 0x%X, Kernel: %s",
        "xxx already mapped ",
        "Local APIC detected at address 0x%x",
        "HalPageTable: 0x%X",
        "*ExtendedBIOSDataArea = 0x%lx",
        "Couldn't get address of extended BIOS data area",
        "Can't allocate PCR",
        "Can't allocate pages for GDT+IDT!",
        "(%s:%d) Fatal Error in %s: MempAllocatePageTables failed!",
        "GDtIdt %p, Pcr %p, Tss 0x%08X",
        "0x%04X | ",
        "0x%08X ",
        "WinLdrSetupMachineDependent",
        "_UUID_",
        "../../boot/freeldr/freeldr/windows/headless.c",
        "LoaderRedirectionInformation.IsMMIODevice == FALSE",
        "/redirect=",
        "usebiossettings",
        "ACPI SRT Table Not Supported...",
        "/redirectbaudrate=",
        "115200",
        "57600",
        "19200",
        "../../boot/freeldr/freeldr/disk/scsiport.c",
        "!(Srb->SrbFlags & SRB_FLAGS_IS_ACTIVE)",
        "Context->SectorNumber < 0xFFFFFFFF",
        "(%s:%d) WARNING: %s is UNIMPLEMENTED!",
        "ScsiPortGetPhysicalAddress(%p %p %p %p)",
        "ScsiPortGetUncachedExtension(%p %p %lu)",
        "SpiAllocateCommonBuffer() failed with Status = 0x%08X!",
        "%spartition(0)",
        "%spartition(%lu)",
        "Scanning SCSI device %d.%d.%d",
        "scsi(%ld)cdrom(%d)fdisk(%d)",
        "scsi(%ld)disk(%d)rdisk(%d)",
        "Got port at 0x%I64x, len 0x%x",
        "Got memory at 0x%I64x, len 0x%x",
        "Got interrupt level %d, vector %d",
        "Got DMA channel %d, port %d",
        "%04hx",
        "Found device 0x%04hx 0x%04hx at %1lu %2lu %1lu",
        "VendorId '%.*s'  DeviceId '%.*s'",
        "Adapter found: buses = %d, targets = %d",
        "ScsiPortReadPortUchar(%p)",
        "NTBOOTDD.SYS",
        "ntbootdd.sys",
        "FREELDR.SYS",
        "scsiport.sys",
        "FreeLdr",
        "ScsiPortCompleteRequest",
        "ScsiPortFlushDma",
        "ScsiPortGetDeviceBase",
        "ScsiPortGetLogicalUnit",
        "ScsiPortGetSrb",
        "SpiAllocateCommonBuffer",
        "ScsiPortGetVirtualAddress",
        "DiskOpen",
        "ScsiPortIoMapTransfer",
        "ScsiPortLogError",
        "ScsiPortNotification",
        "ScsiPortReadRegisterBufferUchar",
        "ScsiPortReadRegisterBufferUlong",
        "ScsiPortReadRegisterBufferUshort",
        "ScsiPortSetBusDataByOffset",
        "ScsiPortValidateRange",
        "ScsiPortWriteRegisterBufferUchar",
        "ScsiPortWriteRegisterBufferUlong",
        "ScsiPortWriteRegisterBufferUshort",
        "../../hal/halx86/legacy/bus/pcibus.c",
        "(%s:%d) WARNING: PCI Slot Resource Assignment is FOOBAR",
        "(%s:%d) DbgPrint() failed!",
        "Descriptor == (*AllocatedResources)->List[0].PartialResourceList.PartialDescriptors + ResourceCount",
        "ERROR:  %s at %s:%d is UNIMPLEMENTED!",
        "(%s:%d) Unimplemented!",
        "NTDDK: Pageable code called at IRQL > APC_LEVEL (%d)",
        "You have implemented the KD routines for searching PCI debuggerdevices, but you have forgotten to implement this routine",
        "(%s:%d) HAL: No PCI Resource Adjustment done! Hardware may malfunction",
        "HAL: Unknown PCI type",
        "HalpPCIPin2ISALine",
        "HalpPCIISALine2Pin",
        "HalpRegisterPciDebuggingDeviceInfo",
        "../../hal/halx86/legacy/bus/bushndlr.c",
        "(%s:%d) STUB GetSetBusData",
        "(%s:%d) DbgPrint() failed!",
        "(%s:%d) STUB Adjustment",
        "(%s:%d) STUB Assignment",
        "Bus->ReferenceCount != 0",
        "../../hal/halx86/legacy/bussupp.c",
        "HalpBusType == MACHINE_TYPE_ISA",
        "NTDDK: Pageable code called at IRQL > APC_LEVEL (%d)",
        "(%s:%d) Slot assignment for %d on bus %u",
        "(%s:%d) DbgPrint() failed!",
        "(%s:%d) No translator Interface: %x, Bus: %x, Handler: %p!",
        "(%s:%d) Returning IRQL %lx, Vector %lx for Level/Vector: %lx/%lx",
        "(%s:%d) Old HAL would've returned IRQL %lx and Vector %lx",
        "(*Context) || (NextBus == TRUE)",
        "In I/O Space",
        "In RAM",
        "../../hal/halx86/legacy/bus/sysbus.c",
        "(%s:%d) Translation of %I64x is %I64x %s",
        "(%s:%d) DbgPrint() failed!",
        "(%s:%d) Translation of %I64x failed!",
        "(%s:%d) IRQ %lx is too high!",
        "HalpDefaultInterruptAffinity",
        "(%s:%d) Vector %lx is ALREADY IN USE!",
        "../../hal/halx86/legacy/bus/cmosbus.c",
        "ERROR:  %s at %s:%d is UNIMPLEMENTED!",
        "CMOS GetData",
        "CMOS SetData",
        "HalpcGetCmosData",
        "HalpcSetCmosData",
        "../../lib/cmlib/hivecell.c",
        "RegistryHive != NULL",
        "FreeBlock != NULL",
        "Size >= (1 << 3)",
        "%s - Hive %p, CellIndex %08lx",
        "CellIndex != HCELL_NIL",
        "CellBlock < RegistryHive->Storage[CellType].Length",
        "Block != NULL",
        "(CellIndex & HCELL_TYPE_MASK) == Stable",
        "RegistryHive->ReadOnly == FALSE",
        "-- beginning of HvpRemoveFree trace --",
        "block we are about to free: %08x",
        "chosen free list index: %u",
        "free list [%u]: ",
        "%08x ",
        "-- end of HvpRemoveFree trace --",
        "FALSE",
        "%s - Hive %p, CellIndex %08lx, HoldingLock %u",
        "Hive->ReadOnly == FALSE",
        "Stable",
        "Volatile",
        "%s - Hive %p, Size %x, %s, Vicinity %08lx",
        "%s - CellIndex %08lx",
        "Free->Size < 0",
        "%s - Hive %p, CellIndex %08lx, Size %x",
        "OldCellSize > 0",
        "CellRef",
        "Hive",
        "Cell != HCELL_NIL",
        "ERROR: Too many references",
        "CellRef->StaticCount <= STATIC_CELL_PAIR_COUNT",
        "HvpGetCellHeader",
        "HvMarkCellDirty",
        "HvAllocateCell",
        "HvReallocateCell",
        "HvFreeCell",
        "../../lib/cmlib/cmtools.c",
        "KeyNode->Signature == CM_KEY_NODE_SIGNATURE",
        "ValueCell->Signature == CM_KEY_VALUE_SIGNATURE",
        "Name != 0",
        "NameLength != 0",
        "../../lib/cmlib/hiveinit.c",
        "(%s:%d) Verify Hive Header failed: ",
        "(%s:%d) DbgPrint() failed!",
        "(%s:%d)     Signature: 0x%x and not 0x%x, Major: 0x%x and not 0x%x",
        "(%s:%d)     Minor: 0x%x is not >= 0x%x, Type: 0x%x and not 0x%x",
        "(%s:%d)     Format: 0x%x and not 0x%x, Cluster: 0x%x and not 1",
        "(%s:%d)     Sequence: 0x%x and not 0x%x, Checksum: 0x%x and not 0x%x",
        "(%s:%d) Registry is corrupt: ChunkSize %lu < sizeof(HBASE_BLOCK) %lu, or HvpVerifyHiveHeader() failed",
        "(%s:%d) Allocating block list failed",
        "sizeof(HBASE_BLOCK) >= (HV_BLOCK_SIZE * Hive->Cluster)",
        "FALSE",
        "../../lib/cmlib/cminit.c",
        "(%s:%d) IndexCell->Signature %x",
        "(%s:%d) DbgPrint() failed!",
        "FALSE",
        "KeyCell->Signature == CM_KEY_NODE_SIGNATURE",
        "../../lib/cmlib/hivebin.c",
        "RegistryHive->DirtyVector.Buffer",
        "../../lib/rtl/image.c",
        "(%s:%d) Invalid flag combination... check for new API flags?",
        "(%s:%d) DbgPrint() failed!",
        "(%s:%d) Size too small",
        "(%s:%d) Not an MZ file",
        "(%s:%d) e_lfanew is larger than PE file",
        "(%s:%d) e_lfanew is larger than 4GB",
        "(%s:%d) PE is larger than 4GB",
        "(%s:%d) PE offset is larger than 256MB",
        "(%s:%d) PE signature missing",
        "(%s:%d) Unknown/unsupported fixup type %hu.",
        "(%s:%d) Address %p, Current %u, Count %u, *TypeOffset %x",
        "(%s:%d) Error during call to LdrProcessRelocationBlockLongLong()!",
        "../../lib/rtl/unicode.c",
        "WARNING:  %s at %s:%d is UNIMPLEMENTED!",
        "!(UniDest->MaximumLength & 1) && UniDest->Length <= UniDest->MaximumLength",
        "!(UnicodeString->Length & 1)",
        "!(UniSource->Length & 1)",
        "Flags == 0",
        "(%s:%d) RtlpEnsureBufferSize: stub",
        "(%s:%d) DbgPrint() failed!",
        "RtlMultiAppendUnicodeStringBuffer",
        "RtlIsValidOemCharacter",
        "../../lib/rtl/nls.c",
        "FALSE",
        "WARNING:  %s at %s:%d is UNIMPLEMENTED!",
        "(%s:%d) RtlConsoleMultiByteToUnicodeN calling RtlMultiByteToUnicodeN",
        "(%s:%d) DbgPrint() failed!",
        "NlsUnicodeToOemTable != NULL",
        "RtlConsoleMultiByteToUnicodeN",
        "(null)",
        "0123456789abcdef0x",
        "0123456789ABCDEF0X",
        "0123456789abcdef0x",
        "0123456789ABCDEF0X",
        "(null)",
        "freeldr.sys",
        "ScsiDebugPrint",
        "ScsiPortCompleteRequest",
        "ScsiPortConvertPhysicalAddressToUlong",
        "ScsiPortConvertUlongToPhysicalAddress",
        "ScsiPortFlushDma",
        "ScsiPortFreeDeviceBase",
        "ScsiPortGetBusData",
        "ScsiPortGetDeviceBase",
        "ScsiPortGetLogicalUnit",
        "ScsiPortGetPhysicalAddress",
        "ScsiPortGetSrb",
        "ScsiPortGetUncachedExtension",
        "ScsiPortGetVirtualAddress",
        "ScsiPortInitialize",
        "ScsiPortIoMapTransfer",
        "ScsiPortLogError",
        "ScsiPortMoveMemory",
        "ScsiPortNotification",
        "ScsiPortReadPortBufferUchar",
        "ScsiPortReadPortBufferUlong",
        "ScsiPortReadPortBufferUshort",
        "ScsiPortReadPortUchar",
        "ScsiPortReadPortUlong",
        "ScsiPortReadPortUshort",
        "ScsiPortReadRegisterBufferUchar",
        "ScsiPortReadRegisterBufferUlong",
        "ScsiPortReadRegisterBufferUshort",
        "ScsiPortReadRegisterUchar",
        "ScsiPortReadRegisterUlong",
        "ScsiPortReadRegisterUshort",
        "ScsiPortSetBusDataByOffset",
        "ScsiPortStallExecution",
        "ScsiPortValidateRange",
        "ScsiPortWritePortBufferUchar",
        "ScsiPortWritePortBufferUlong",
        "ScsiPortWritePortBufferUshort",
        "ScsiPortWritePortUchar",
        "ScsiPortWritePortUlong",
        "ScsiPortWritePortUshort",
        "ScsiPortWriteRegisterBufferUchar",
        "ScsiPortWriteRegisterBufferUlong",
        "ScsiPortWriteRegisterBufferUshort",
        "ScsiPortWriteRegisterUchar",
        "ScsiPortWriteRegisterUlong",
        "ScsiPortWriteRegisterUshort",
        ""
    ],
    "malware": "benign"
}